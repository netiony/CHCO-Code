---
title: PENGUIN Analysis
author: Tim Vigers, Ye Ji Choi
date: "`r lubridate::today()`"
format: 
  html:
    toc: true
    toc-depth: 5
    toc-location: left
    code-fold: true
    theme: default
editor: visual
---

```{r setup, include=F}
library(dplyr)
library(reticulate)
library(corrplot)
library(knitr)
library(Hmisc)
library(tidyverse)
library(scales)
library(kableExtra)
library(gtools)
library(superheat)
library(emmeans)
library(ggpubr)
library(table1)
library(RColorBrewer)
library(magrittr)
library(ggpattern)
library(ggpp)
library(multcomp)
library(patchwork)
library(ggnewscale)
library(ggsignif)
use_python("/usr/bin/python3", required = TRUE)
```

```{python, include=F}
import pandas as pd
import numpy as np
import statistics
import rpy2
import rpy2.robjects as ro
import seaborn as sns
import matplotlib.pyplot as plt
from tableone import TableOne
from rpy2.robjects.packages import importr
from rpy2.robjects import pandas2ri
from scipy.stats import mannwhitneyu

# Import data and variable names
df = pd.read_csv("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/Data Harmonization/Data Clean/harmonized_dataset.csv", low_memory=False)
var_names = pd.read_csv("/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/Data Harmonization/data_dictionary_master.csv", low_memory=False)
# Create dictionary of variable names
var_dict = var_names.set_index('variable_name')['label'].to_dict()
# Subset to CROCODILE and PENGUIN
df = df.loc[df["study"].isin(["CROCODILE","PENGUIN"])]
df = df.loc[df["group"] != "Type 1 Diabetes"]
df = df.loc[df["group"] != "Type 2 Diabetes"]
df = df.loc[df["visit"] == "baseline"]
df = df[(df['study'] != 'RENAL-HEIRitage') | (df['group'] != 'Lean Control')]
# Get last values for each visit
df = df.groupby(by=["record_id", "visit"]).agg("last").reset_index()
# Exclude any removed participants
df = df.loc[df["participation_status"] != "Removed"]
# Create FFA suppression variables
df = df.assign(ffa_suppression_1 = (df.baseline_ffa - df[['ffa_70', 'ffa_80', 'ffa_90']].mean(axis=1))/df.baseline_ffa*100, ffa_suppression_2 = (df.baseline_ffa -  df[['ffa_250', 'ffa_260', 'ffa_270']].mean(axis=1))/df.baseline_ffa * 100)
# Create urine albumin excretion variable (general 24 hrs)
df = df.assign(aer_24 = (df.u24_mab * df.u24_vl) / 1440)
# Create urine albumin excretion variable (specific to collection time)
df = df.assign(aer_24_coltime = (df.u24_mab * df.u24_vl) / (df.u24_hrs * 60))
# Group adpkd_classification grouping (ABC vs. DE)
df['adpkd_grp'] = np.where((df['adpkd_classification'] == 1) | (df['adpkd_classification'] == 2) | (df['adpkd_classification'] == 3), "1ABC", 
                           np.where((df['adpkd_classification'] == 4) | (df['adpkd_classification'] == 5), "1DE", np.nan))
# ADPKD classification relevel
df["adpkd_classification"].replace({1: "1A", 2: "1B", 3: "1C", 4: "1D", 5: "1E"}, inplace=True)
# Height-adjusted
df["height_adj_total_kidney_volume"] = df["total_kidney_volume_ml"] / (df["height"] / 100)
df["height_adj_right_kidney_volume"] = df["right_kidney_volume_ml"] / (df["height"] / 100)
df["height_adj_left_kidney_volume"] = df["left_kidney_volume_ml"] / (df["height"] / 100)
# Average left/right cortex
df["avg_f"] = df[["lc_f", "rc_f"]].mean(axis=1)
df["avg_k1"] = df[["lc_k1", "rc_k1"]].mean(axis=1)
df["avg_k2"] = df[["lc_k2", "rc_k2"]].mean(axis=1)
df["avg_vb"] = df[["lc_vb", "rc_vb"]].mean(axis=1)
df["avg_k1_w_cyst"] = df[["ltot_k1_w_cyst", "rtot_k1_w_cyst"]].mean(axis=1)
df["avg_k2_w_cyst"] = df[["ltot_k2_w_cyst", "rtot_k2_w_cyst"]].mean(axis=1)
df["avg_k1_wo_cyst"] = df[["ltot_k1_wo_cyst", "rtot_k1_wo_cyst"]].mean(axis=1)
df["avg_k2_wo_cyst"] = df[["ltot_k2_wo_cyst", "rtot_k2_wo_cyst"]].mean(axis=1)
# Calculate k2 ratios
df["k2_f"] = df["avg_k2"] / df["avg_f"]
df["k2_k1"] = df["avg_k2"] / df["avg_k1"]
# Calculate adjusted body weight and BMI
df["adjusted_weight"] = df["weight"] - (df["total_kidney_volume_ml"]/1000)
# Calculate VATindex (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8147540/)
df["vat_index"] = (df["dexa_est_vat"]/1000) / ((df["height"]/100) ** 2)
df["adjusted_bmi"] = df["adjusted_weight"] / ((df["height"]/100) ** 2)
# Calculate M/I (in phase 2)
df["m_i"] = df["p2_raw_leanm"] / df["p2_steady_state_insulin"]
# Subset data with PET data
df = df.loc[pd.notnull(df["avg_k2_w_cyst"])]
# Categorical variables
cat = ["sex","race","statin", "angiotensin_receptor_blocker", "ace_inhibitor","adpkd_classification", "adpkd_grp"]
groupby = "group"
```

```{python, include=F}
t1_vars = ["age", "sex","race","height","weight", "adjusted_bmi", "bmi","sbp","dbp","pulse","creatinine_s","eGFR_CKD_epi","acr_u","aer_24", "aer_24_coltime","statin", "angiotensin_receptor_blocker","ace_inhibitor","adpkd_classification", "adpkd_grp", "m_i", "gfr_bsa_plasma", "erpf_bsa_plasma", "gfr_bsa_plasma_urine", "erpf_bsa_plasma_urine", 
"glomerular_pressure","ra","re", "rvr"]

# t1-histograms
# hist_vars1 = df[list(t1_vars)].select_dtypes(include=np.number).columns.tolist()
# for v in hist_vars1:
#   ax = sns.displot(df, x=v, hue="group", element="step")
#   ax.set(xlabel=v)
#   plt.show()
  
# t1-non-normal
t1nn = ["adjusted_bmi", "acr_u", "creatinine_s", "sbp", "dbp", "bmi", "aer_24", "aer_24_col_time"]
```

```{python, include=F}
mri_vars = ["total_kidney_volume_ml","height_adj_total_kidney_volume","right_kidney_volume_ml","height_adj_right_kidney_volume","left_kidney_volume_ml","height_adj_left_kidney_volume","total_liver_volume_ml","total_cyst_volume_ml","total_number_of_cysts","lc_f","rc_f", "lc_k1", "rc_k1", "lc_k2", "rc_k2", "lc_vb","rc_vb", "rtot_k1_w_cyst",	"rtot_k1_wo_cyst",	"ltot_k1_w_cyst",	"ltot_k1_wo_cyst",	"rtot_k2_w_cyst",	"rtot_k2_wo_cyst",	"ltot_k2_w_cyst",	"ltot_k2_wo_cyst", "avg_f", "avg_k1", "avg_k2", "avg_vb",  "avg_k1_w_cyst",	"avg_k1_wo_cyst",		"avg_k2_w_cyst",	"avg_k2_wo_cyst", "k2_f", "k2_k1", "cyst_parenchyma_sa"]

# t2-histograms
# hist_vars2 = df[list(mri_vars)].select_dtypes(include=np.number).columns.tolist()
# for v in hist_vars2:
#    ax = sns.displot(df, x=v, hue="group", element="step")
#    ax.set(xlabel=v)
#    plt.show()
   
# t2-non-normal
# t2nn = ["total_cyst_volume_ml", "total_number_of_cysts", "lc_f", "rc_f", "lc_k1", "rc_k1", "lc_vb", "rc_vb", "rtot_k1_w_cyst",	"rtot_k1_wo_cyst",	"ltot_k1_w_cyst",	"ltot_k1_wo_cyst",	"rtot_k2_w_cyst",	"rtot_k2_wo_cyst",	"ltot_k2_w_cyst",	"ltot_k2_wo_cyst", "avg_f", "avg_k1", "avg_vb",  "avg_k1_w_cyst",	"avg_k1_wo_cyst",		"avg_k2_w_cyst",	"avg_k2_wo_cyst", "k2_f", "k2_k1", "cyst_parenchyma_sa"]
t2nn = []
```

```{python, include=F}
dxa_vars = ["dexa_body_fat","dexa_fat_kg", "dexa_lean_mass", "dexa_lean_kg","dexa_trunk_kg","dexa_est_vat", "vat_index",  "p1_raw_m","p1_raw_leanm","p2_raw_m","p2_raw_leanm", "ffa_suppression_1", "ffa_suppression_2"]
mri_dxa_vars = mri_vars + dxa_vars
all_vars = t1_vars + mri_vars + dxa_vars

# t3-histograms
# hist_vars3 = df[list(dxa_vars)].select_dtypes(include=np.number).columns.tolist()
# for v in hist_vars3:
#    ax = sns.displot(df, x=v, hue="group", element="step")
#    ax.set(xlabel=v)
#    plt.show()
   
# t3-non-normal
t3nn = ["ffa_suppression_1", "ffa_suppression_2"]
t4nn = t2nn + t3nn
```

```{python, include=F}
# Missing variables check
missing = df.groupby(['group'])[all_vars].apply(lambda x: x.isnull().sum())
missing = np.transpose(missing)

# Create descriptive tables
t1 = TableOne(df,t1_vars, cat, groupby=groupby, nonnormal=t1nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
t2 = TableOne(df,mri_vars, groupby=groupby, nonnormal=t2nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
t3 = TableOne(df,dxa_vars, groupby=groupby, nonnormal=t3nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)

# Create descriptive tables with OC - omitted OC's for now during AJKD rebuttal stage
# t1_OC = TableOne(df_OC ,t1_vars, cat, groupby=groupby, nonnormal=t1nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
# t2_OC = TableOne(df_OC ,mri_vars, groupby=groupby, nonnormal=t2nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
# t3_OC = TableOne(df_OC ,dxa_vars, groupby=groupby, nonnormal=t3nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
```

# Descriptive Tables

## Demographics, anthropometrics and vital signs

```{python}
#| label: tbl-1
#| tbl-cap: Participant Characteristics
t1
t1.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/t1.csv")
```

## DEXA

```{python}
#| label: tbl-2
#| tbl-cap: PET and MRI
t2
t2.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/t2.csv")
```

## MRI kidney and liver volumes, MRI cyst volume and numbers, ^11^C-acetate PET derived kidney energetics and function

```{python}
#| label: tbl-3
#| tbl-cap: DXA
t3
t3.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/t3.csv")
```

### Supplemental Obese Control

## Demographics, anthropometrics and vital signs

```{python}
#| label: tbl-1-OC
#| tbl-cap: Participant Characteristics
# t1_OC
# t1_OC.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/t1_OC.csv")
```

## DEXA

```{python}
#| label: tbl-2-OC
#| tbl-cap: PET and MRI
# t2_OC
# t2_OC.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/t2_OC.csv")
```

## MRI kidney and liver volumes, MRI cyst volume and numbers, ^11^C-acetate PET derived kidney energetics and function

```{python}
#| label: tbl-3-OC
#| tbl-cap: DXA
# t3_OC
# t3_OC.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/t3_OC.csv")
```

# Supplemental by ADPKD class

```{python, include=F}
df_pkd = df.loc[df["group"] == "PKD"]
df_pkd = df_pkd.loc[df_pkd["adpkd_grp"] != "nan"]
cyst_vars = ["total_cyst_volume_ml", "total_number_of_cysts"]

# hist_vars1 = df[list(cyst_vars)].select_dtypes(include=np.number).columns.tolist()
# for v in hist_vars1:
#   ax = sns.displot(df, x=v, hue="adpkd_grp", element="step")
#   ax.set(xlabel=v)
#   plt.show()

adpkd_grp_desc = TableOne(df_pkd,cyst_vars, nonnormal=cyst_vars, groupby="adpkd_grp", pval=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
## Cyst burden by ADPKD group (grouped by 1A/1B/1C and 1D/1E)
adpkd_grp_desc

t1_adpkd_vars = ["age", "sex","race","height","weight",
"adjusted_bmi", "bmi","sbp","dbp","pulse","creatinine_s","eGFR_CKD_epi","acr_u",
"aer_24", "aer_24_coltime","statin", "angiotensin_receptor_blocker","ace_inhibitor", 
"dexa_est_vat", "m_i", "gfr_bsa_plasma", "erpf_bsa_plasma", "gfr_bsa_plasma_urine", "erpf_bsa_plasma_urine", 
"glomerular_pressure","ra","re", "rvr"]

hist_vars1 = df_pkd[list(t1_adpkd_vars)].select_dtypes(include=np.number).columns.tolist()
for v in hist_vars1:
  ax = sns.displot(df_pkd, x=v, hue="adpkd_grp", element="step")
  ax.set(xlabel=v)
  plt.show()

# t1-adpkd-non-normal
t1_adpkd_nn = ["adjusted_bmi", "bmi", "creatinine_s", "acr_u", "aer_24", "aer_24_col_time"]

adpkd_grp_t1 = TableOne(df_pkd,t1_adpkd_vars, nonnormal=t1_adpkd_nn, groupby="adpkd_grp", pval=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)

adpkd_grp_t2 = TableOne(df_pkd,mri_dxa_vars, groupby="adpkd_grp", nonnormal=t4nn, pval=True, dip_test=True, normal_test=True, tukey_test=True, decimals=3, rename=var_dict)
```

```{python}
#| label: tbl-1-adpkd
#| tbl-cap: Participant Characteristics by ADPKD
adpkd_grp_t1
adpkd_grp_t1.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/adpkd_grp_t1.csv")
```

```{python}
#| label: tbl-2-adpkd
#| tbl-cap: PET and MRI by ADPKD
adpkd_grp_t2
adpkd_grp_t2.to_csv("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/adpkd_grp_t2.csv")
```

```{r, include=F}
# Make python version of df into R version df
dat <- py$df
dict <- as.data.frame(py$var_dict)
dat <- dat %>% mutate(group = case_when(group == "Lean Control" ~ "NWC",
                                   group == "PKD" ~ "ADPKD",
                                   group == "Obese Control" ~ "Obese"))
dict %<>%
  mutate(height_adj_total_kidney_volume = "Height Adjusted Total Kidney Volume",
         height_adj_left_kidney_volume = "Height Adjusted Left Kidney Volume",
         height_adj_right_kidney_volume = "Height Adjusted Right Kidney Volume",
         m_i = paste0("M/I"),
         ffa_suppression_1 = "FFA Suppression P1",
         ffa_suppression_2 = "FFA Suppression P2",
         m_i_row = paste0("M/I"),
         p2_raw_leanm_row = p2_raw_leanm,
         dexa_fat_kg_row = dexa_fat_kg,
         dexa_lean_kg_row = dexa_lean_kg,
         dexa_est_vat_row = dexa_est_vat,
         ltot_k1_w_cyst = paste0("Left Total Kidney K1 w/ cyst (Voxel-wise)"),
         ltot_k2_w_cyst = paste0("Left Total Kidney K2 w/ cyst (Voxel-wise)"),
         ltot_k1_wo_cyst = paste0("Left Total Kidney K1 wo/ cyst (Voxel-wise)"),
         ltot_k2_wo_cyst = paste0("Left Total Kidney K2 wo/ cyst (Voxel-wise)"),
         rtot_k1_w_cyst = paste0("Right Total Kidney K1 w/ cyst (Voxel-wise)"),
         rtot_k2_w_cyst = paste0("Right Total Kidney K2 w/ cyst (Voxel-wise)"),
         rtot_k1_wo_cyst = paste0("Right Total Kidney K1 wo/ cyst (Voxel-wise)"),
         rtot_k2_wo_cyst = paste0("Right Total Kidney K2 wo/ cyst (Voxel-wise)"),
         avg_f = paste0("Average cortex perfusion (F)"),
         avg_k1 = paste0("Average cortex tracer uptake (k1)"),
         avg_k2 = paste0("Average cortex oxidation (k2)"),
         avg_vb = paste0("Average cortex vb"),
         avg_k1_w_cyst = paste0("Average cortex perfusion with cyst (K1)"),
         avg_k1_wo_cyst = paste0("Average cortex perfusion w/o cyst (K1)"),
         avg_k2_w_cyst = paste0("Average cortex perfusion with cyst (K2)"),
         avg_k2_wo_cyst = paste0("Average cortex perfusion w/o cyst (K2)"),
         k2_f = "k2/f",
         k2_k1 = "k2/k1",
         ffa_suppression_1_row = "FFA Suppression P1",
         ffa_suppression_2_row = "FFA Suppression P2")
```

# Descriptive Table in R

```{r}
table1(~ age +  sex + race + height + weight +  adjusted_bmi +  bmi + sbp + dbp + pulse + creatinine_s + eGFR_CKD_epi + acr_u + aer_24 +  aer_24_coltime  +   m_i | group, data=dat)

table1(~ total_kidney_volume_ml + height_adj_total_kidney_volume + right_kidney_volume_ml + height_adj_right_kidney_volume + left_kidney_volume_ml + height_adj_left_kidney_volume + total_liver_volume_ml + total_cyst_volume_ml + total_number_of_cysts + lc_f + rc_f +  lc_k1 +  rc_k1 +  lc_k2 +  rc_k2 +  lc_vb + rc_vb +  rtot_k1_w_cyst + 	rtot_k1_wo_cyst + 	ltot_k1_w_cyst + 	ltot_k1_wo_cyst + 	rtot_k2_w_cyst + 	rtot_k2_wo_cyst + 	ltot_k2_w_cyst + 	ltot_k2_wo_cyst +  avg_f +  avg_k1 +  avg_k2 +  avg_vb +   avg_k1_w_cyst + 	avg_k1_wo_cyst + 		avg_k2_w_cyst + 	avg_k2_wo_cyst +  k2_f +  k2_k1 + glomerular_pressure + ra + re + rvr | group,  data=dat)
```

# Sensitivity analysis (lean and obese pool)

```{r}
# dat %<>%
#   mutate(group_lo_pool = case_when(group != "PKD" ~ "Lean/Obese",
#                                    T ~ group))
```

# Correlation

```{r}
source("/Users/choiyej/GitHub/YC_CHCO/R Functions/label_harmonized_function.R")
source("/Users/choiyej/GitHub/YC_CHCO/R Functions/correlation_function.R")

dat %<>%
  mutate(m_i_row = m_i,
         dexa_body_fat_row = dexa_body_fat,
         dexa_lean_mass_row = dexa_lean_mass,
         dexa_est_vat_row = dexa_est_vat,
         height_adj_total_kidney_volume_row = height_adj_total_kidney_volume)
dict %<>%
  mutate(dexa_est_vat = "Estimated VAT mass",
         m_i_row = m_i,
         dexa_body_fat_row = dexa_body_fat,
         dexa_lean_mass_row = dexa_lean_mass,
         dexa_est_vat_row = dexa_est_vat,
         avg_f = "Average F",
         avg_k1 = "Average K1",
         avg_k2_w_cyst = "Average k2 w/ cyst",
         avg_k2_wo_cyst = "Average k2 w/o cyst",
         cyst_parenchyma_sa = "Cyst parenchyma SA",
         height_adj_total_kidney_volume = "Height adjusted TKV",
         height_adj_total_kidney_volume_row = "Height adjusted TKV",
         k2_f = "Average k2/F",
         k2_k1 = "Average k2/K1",
         vat_index = "VAT index"
        )

# Table 3
# corr_plot_modified(data = subset(dat, group!="Obese"), 
#                    X = c("m_i_row",
#                          "dexa_body_fat_row",
#                          "dexa_lean_mass_row",
#                          "dexa_est_vat_row",
#                          "lc_f", 
#                          "rc_f",
#                          "lc_k1", 
#                          "rc_k1", 
#                          "ltot_k2_w_cyst",	
#                          "ltot_k2_wo_cyst", 
#                          "rtot_k2_w_cyst",
#                          "rtot_k2_wo_cyst"), 
#                    Y = c("m_i", 
#                          "dexa_body_fat", 
#                          "dexa_lean_mass", 
#                          "dexa_est_vat"),
#                    dict = dict)

# Table 3 (Average only)
# png(height = 1500, width = 1200, file = "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/tab3.png", res = 170)
# corr_plot_modified(data = subset(dat, group!="Obese"), 
#                    X = c("avg_f", 
#                          "avg_k1", 
#                          "avg_k2_w_cyst",	
#                          "avg_k2_wo_cyst",
#                          "k2_f",
#                          "k2_k1",
#                          "height_adj_total_kidney_volume"), 
#                    Y = c("m_i", 
#                          "dexa_body_fat", 
#                          "dexa_lean_mass", 
#                          "vat_index",
#                          "height_adj_total_kidney_volume_row"),
#                    dict = dict)
# dev.off()

correlation_table_minimal(data = subset(dat, group!="Obese"), 
                   relevant_vars = c(
                     "m_i", 
                         "dexa_body_fat", 
                         "dexa_lean_mass", 
                         "vat_index",
                         "ltot_k2_w_cyst", 
                         "ltot_k2_wo_cyst", 
                         "rtot_k2_w_cyst",	
                         "rtot_k2_wo_cyst",
                         "avg_k2_w_cyst",
                         "avg_k2_wo_cyst"),
                   n_col = 4, 
                   dict = dict)

dat_correlation <- subset(dat, group!= "Obese") %>%
  dplyr::select(all_of(c("m_i", 
                         "dexa_body_fat", 
                         "dexa_lean_mass", 
                         "vat_index",
                         "ltot_k2_w_cyst", 
                         "ltot_k2_wo_cyst", 
                         "rtot_k2_w_cyst",	
                         "rtot_k2_wo_cyst",
                         "avg_k2_w_cyst",
                         "avg_k2_wo_cyst")))

lower <- cor.mtest(dat_correlation, conf.level = 0.95)$lowCI %>%
  as.data.frame() %>%
  dplyr::mutate_all(round, digits = 2)
upper <- cor.mtest(dat_correlation, conf.level = 0.95)$uppCI %>%
  as.data.frame() %>%
  dplyr::mutate_all(round, digits = 2)
ci <- data.frame(lapply(seq_along(lower), function(i) {
  paste("(", lower[[i]], ",", upper[[i]], ")", sep = "")
}))
colnames(ci) <- colnames(lower)
rownames(ci) <- rownames(lower)


# Table 3 (Average only - excluding PKD)
# png(height = 1500, width = 1200, file = "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/tab3_excluding_PKD.png", res = 170)
# corr_plot_modified(data = subset(dat, group!="PKD"), 
#                    X = c("avg_f", 
#                          "avg_k1", 
#                          "avg_k2_w_cyst",	
#                          "avg_k2_wo_cyst",
#                          "k2_f",
#                          "k2_k1",
#                          "height_adj_total_kidney_volume"), 
#                    Y = c("m_i", 
#                          "dexa_body_fat", 
#                          "dexa_lean_mass", 
#                          "vat_index",
#                          "height_adj_total_kidney_volume_row"),
#                    dict = dict)
# dev.off()

# # Table 4
# corr_plot_modified(data = subset(dat, group!="Obese"), 
#                    Y = c("height_adj_total_kidney_volume", 
#                          "height_adj_right_kidney_volume", 
#                          "height_adj_left_kidney_volume", 
#                          "total_liver_volume_ml", 
#                          "total_cyst_volume_ml", 
#                          "total_number_of_cysts"), 
#                    X = c("m_i", 
#                          "dexa_body_fat", 
#                          "dexa_lean_mass", 
#                          "dexa_est_vat",
#                          "lc_f",
#                          "rc_f",
#                          "avg_f",
#                          "lc_k1",
#                          "rc_k1",
#                          "avg_k1",
#                          "k2_f",
#                          "k2_k1",
#                          "ltot_k2_w_cyst",	
#                          "ltot_k2_wo_cyst", 
#                          "rtot_k2_w_cyst",
#                          "rtot_k2_wo_cyst",
#                          "avg_k2_w_cyst", 
#                          "avg_k2_wo_cyst"
#                          ),
#                    dict = dict)


correlation_table_minimal(data = subset(dat, group!="Obese"),
                   relevant_vars  = c("height_adj_total_kidney_volume",
                         "height_adj_right_kidney_volume",
                         "height_adj_left_kidney_volume",
                         "total_liver_volume_ml",
                         "total_cyst_volume_ml",
                         "total_number_of_cysts",
                         "cyst_parenchyma_sa",
                         "m_i",
                         "dexa_body_fat",
                         "dexa_lean_mass",
                         "vat_index",
                         "lc_f",
                         "rc_f",
                         "avg_f",
                         "lc_k1",
                         "rc_k1",
                         "avg_k1",
                         "k2_f",
                         "k2_k1",
                         "ltot_k2_w_cyst",
                         "ltot_k2_wo_cyst",
                         "rtot_k2_w_cyst",
                         "rtot_k2_wo_cyst",
                         "avg_k2_w_cyst",
                         "avg_k2_wo_cyst"
                         ),
                   n_cols = 7,
                   dict = dict)

dat_correlation <- subset(dat, group!= "Obese") %>%
  dplyr::select(all_of(c("height_adj_total_kidney_volume",
                         "height_adj_right_kidney_volume",
                         "height_adj_left_kidney_volume",
                         "total_liver_volume_ml",
                         "total_cyst_volume_ml",
                         "total_number_of_cysts",
                         "cyst_parenchyma_sa",
                         "m_i",
                         "dexa_body_fat",
                         "dexa_lean_mass",
                         "vat_index",
                         "lc_f",
                         "rc_f",
                         "avg_f",
                         "lc_k1",
                         "rc_k1",
                         "avg_k1",
                         "k2_f",
                         "k2_k1",
                         "ltot_k2_w_cyst",
                         "ltot_k2_wo_cyst",
                         "rtot_k2_w_cyst",
                         "rtot_k2_wo_cyst",
                         "avg_k2_w_cyst",
                         "avg_k2_wo_cyst"
                         )))

lower <- cor.mtest(dat_correlation, conf.level = 0.95)$lowCI %>%
  as.data.frame() %>%
  dplyr::mutate_all(round, digits = 2)
upper <- cor.mtest(dat_correlation, conf.level = 0.95)$uppCI %>%
  as.data.frame() %>%
  dplyr::mutate_all(round, digits = 2)
ci <- data.frame(lapply(seq_along(lower), function(i) {
  paste("(", lower[[i]], ",", upper[[i]], ")", sep = "")
}))
colnames(ci) <- colnames(lower)
rownames(ci) <- rownames(lower)

write.csv(ci, "/Users/choiyej/Library/CloudStorage/OneDrive-SharedLibraries-UW/Laura Pyle - Bjornstad/Biostatistics Core Shared Drive/PENGUIN/Data_Cleaned/Table S2 CI.csv")


# Table 4 (Average only)
# png(height = 1200, width = 1000, file = "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/tab4.png", res = 170)
# corr_plot_modified(data = subset(dat, group=="PKD"), 
#                    Y = c("height_adj_total_kidney_volume",
#                          "total_liver_volume_ml", 
#                          "total_cyst_volume_ml", 
#                          "total_number_of_cysts",
#                          "cyst_parenchyma_sa"), 
#                    X = c("m_i", 
#                          "dexa_body_fat", 
#                          "dexa_lean_mass", 
#                          "vat_index",
#                          "avg_f",
#                          "avg_k1",
#                          "k2_f",
#                          "k2_k1",
#                          "avg_k2_w_cyst", 
#                          "avg_k2_wo_cyst"),
#                    dict = dict)
# dev.off()

```

# Correlation Scatter Plots

## Body Fat

```{r warning=F}
# Body Fat vs. Avg Cortex F
ggplot(dat, aes(dexa_fat_kg, avg_f)) +
  ggtitle("Body fat vs. avg cortex F (Pooled)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) + 
  stat_cor(method = "pearson") +
  scale_color_manual(values=c('deeppink', 'steelblue'))

# ggplot(df_HC, aes(dexa_fat_kg, avg_f)) +
#   ggtitle("Body fat vs. avg cortex F (HC only)") +
#   geom_point(aes(color=group)) +
#   geom_smooth(method=lm, se=F) +
#   stat_cor(method = "pearson") +
#   scale_color_manual(values='deeppink')

# ggplot(df_PKD, aes(dexa_fat_kg, avg_f)) +
#   ggtitle("Body fat vs. avg cortex F (PKD only)") +
#   geom_point(aes(color=group)) +
#   geom_smooth(method=lm, se=F) +
#   stat_cor(method = "pearson") +
#   scale_color_manual(values='steelblue')

# Body Fat vs. Avg Cortex k1
ggplot(dat, aes(dexa_fat_kg, avg_k1)) +
  ggtitle("Body fat vs. avg cortex k1 (Pooled)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values=c('deeppink', 'steelblue'))

# ggplot(df_HC, aes(dexa_fat_kg, avg_k1)) +
#   ggtitle("Body fat vs. avg cortex k1 (HC only)") +
#   geom_point(aes(color=group)) +
#   geom_smooth(method=lm, se=F) +
#   stat_cor(method = "pearson") +
#   scale_color_manual(values='deeppink')
# 
# ggplot(df_PKD, aes(dexa_fat_kg, avg_k1)) +
#   ggtitle("Body fat vs. avg cortex k1 (PKD only)") +
#   geom_point(aes(color=group)) +
#   geom_smooth(method=lm, se=F) +
#   stat_cor(method = "pearson") +
#   scale_color_manual(values='steelblue')

# Body Fat vs. k2/f
ggplot(dat, aes(dexa_fat_kg, k2_f)) +
  ggtitle("Body fat vs. k2/f (Pooled)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values=c('deeppink', 'steelblue'))

# ggplot(df_HC, aes(dexa_fat_kg, k2_f)) +
#   ggtitle("Body fat vs. k2/f (HC only)") +
#   geom_point(aes(color=group)) +
#   geom_smooth(method=lm, se=F) +
#   stat_cor(method = "pearson") +
#   scale_color_manual(values='deeppink')
# 
# ggplot(df_PKD, aes(dexa_fat_kg, k2_f)) +
#   ggtitle("Body fat vs. k2/f (PKD only)") +
#   geom_point(aes(color=group)) +
#   geom_smooth(method=lm, se=F) +
#   stat_cor(method = "pearson") +
#   scale_color_manual(values='steelblue')
```

## Body Fat

```{r warning=F}
# Body Fat vs. Avg Cortex F
ggplot(dat, aes(dexa_est_vat, avg_f)) +
  ggtitle("Estimated VAT vs. avg cortex F (Pooled)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) + 
  stat_cor(method = "pearson") +
  scale_color_manual(values=c('deeppink', 'steelblue'))

# ggplot(df_HC, aes(dexa_est_vat, avg_f)) +
#   ggtitle("Estimated VAT vs. avg cortex F (HC only)") +
#   geom_point(aes(color=group)) +
#   geom_smooth(method=lm, se=F) +
#   stat_cor(method = "pearson") +
#   scale_color_manual(values='deeppink')
# 
# ggplot(df_PKD, aes(dexa_est_vat, avg_f)) +
#   ggtitle("Estimated VAT vs. avg cortex F (PKD only)") +
#   geom_point(aes(color=group)) +
#   geom_smooth(method=lm, se=F) +
#   stat_cor(method = "pearson") +
#   scale_color_manual(values='steelblue')

# Body Fat vs. Avg Cortex k1
ggplot(dat, aes(dexa_est_vat, avg_k1)) +
  ggtitle("Estimated VAT vs. avg cortex k1 (Pooled)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values=c('deeppink', 'steelblue'))

# ggplot(df_HC, aes(dexa_est_vat, avg_k1)) +
#   ggtitle("Estimated VAT vs. avg cortex k1 (HC only)") +
#   geom_point(aes(color=group)) +
#   geom_smooth(method=lm, se=F) +
#   stat_cor(method = "pearson") +
#   scale_color_manual(values='deeppink')
# 
# ggplot(df_PKD, aes(dexa_est_vat, avg_k1)) +
#   ggtitle("Estimated VAT vs. avg cortex k1 (PKD only)") +
#   geom_point(aes(color=group)) +
#   geom_smooth(method=lm, se=F) +
#   stat_cor(method = "pearson") +
#   scale_color_manual(values='steelblue')

# Body Fat vs. k2/f
ggplot(dat, aes(dexa_est_vat, k2_f)) +
  ggtitle("Estimated VAT vs. k2/f (Pooled)") +
  geom_point(aes(color=group)) +
  geom_smooth(method=lm, se=F) +
  stat_cor(method = "pearson") +
  scale_color_manual(values=c('deeppink', 'steelblue'))

# ggplot(df_HC, aes(dexa_est_vat, k2_f)) +
#   ggtitle("Estimated VAT vs. k2/f (HC only)") +
#   geom_point(aes(color=group)) +
#   geom_smooth(method=lm, se=F) +
#   stat_cor(method = "pearson") +
#   scale_color_manual(values='deeppink')
# 
# ggplot(df_PKD, aes(dexa_est_vat, k2_f)) +
#   ggtitle("Estimated VAT vs. k2/f (PKD only)") +
#   geom_point(aes(color=group)) +
#   geom_smooth(method=lm, se=F) +
#   stat_cor(method = "pearson") +
#   scale_color_manual(values='steelblue')
```

# Partial correlation

```{r}
library(ppcor)
source("/Users/choiyej/GitHub/YC_CHCO/R Functions/correlation_function.R")

# Obese excluded
png(height = 1500, width = 1200, file = "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/partial_cor.png", res = 170)
pcor.plot(data = subset(dat, group != "Obese"), 
          X = c("avg_f", 
                "avg_k1", 
                "avg_k2_w_cyst",	
                "avg_k2_wo_cyst",
                "k2_f",
                "k2_k1",
                "height_adj_total_kidney_volume"),
          Y = c("m_i", 
                "dexa_body_fat", 
                "dexa_lean_mass", 
                "dexa_est_vat",
                "height_adj_total_kidney_volume"),
          Z = c("age"), dict = dict)
dev.off()

png(height = 1500, width = 1200, file = "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/partial_cor_age_bmi.png", res = 170)
pcor.plot(data = subset(dat, group != "Obese"), 
          X = c("avg_f", 
                "avg_k1", 
                "avg_k2_w_cyst",	
                "avg_k2_wo_cyst",
                "k2_f",
                "k2_k1",
                "height_adj_total_kidney_volume"),
          Y = c("m_i", 
                "dexa_body_fat", 
                "dexa_lean_mass", 
                "dexa_est_vat",
                "height_adj_total_kidney_volume"),
          Z = c("age", "bmi"), dict = dict)
dev.off()

# ADPKD only
png(height = 1200, width = 1000, file = "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/partial_cor_ADPKD.png", res = 170)
pcor.plot(data = subset(dat, group=="ADPKD"), 
                   Y = c("height_adj_total_kidney_volume",
                         "total_liver_volume_ml", 
                         "total_cyst_volume_ml", 
                         "total_number_of_cysts",
                         "cyst_parenchyma_sa"), 
                   X = c("m_i", 
                         "dexa_body_fat", 
                         "dexa_lean_mass", 
                         "dexa_est_vat",
                         "avg_f",
                         "avg_k1",
                         "k2_f",
                         "k2_k1",
                         "avg_k2_w_cyst", 
                         "avg_k2_wo_cyst"),
          Z = c("age"), dict = dict)
dev.off()

png(height = 1200, width = 1000, file = "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/partial_cor_ADPKD_age_bmi.png", res = 170)
pcor.plot(data = subset(dat, group=="ADPKD"), 
                   Y = c("height_adj_total_kidney_volume",
                         "total_liver_volume_ml", 
                         "total_cyst_volume_ml", 
                         "total_number_of_cysts",
                         "cyst_parenchyma_sa"), 
                   X = c("m_i", 
                         "dexa_body_fat", 
                         "dexa_lean_mass", 
                         "dexa_est_vat",
                         "avg_f",
                         "avg_k1",
                         "k2_f",
                         "k2_k1",
                         "avg_k2_w_cyst", 
                         "avg_k2_wo_cyst"),
          Z = c("age", "bmi"), dict = dict)
dev.off()

```

# Linear regression

```{r}
# Function to extract coefficient and p-value for each model adjusting for sex
lm_extract <- function(data, x_vars, y_vars, adj_var) {
  lm_extracted <- data.frame(y = character(0),
                             x = character(0),
                             adj_var = character(0),
                             x_coef = numeric(0),
                             x_pval = numeric(0), 
                             p_sig = character(0))
  for (i in 1:length(x_vars)) {
    if(x_vars[i] != y_vars[i]) {
      lm_formula <- as.formula(paste0(y_vars[i], "~", x_vars[i], "+", adj_var))
      lm_model <- lm(lm_formula, data = data)
      lm_summary <- summary(lm_model)
      lm_coef <- lm_summary$coefficient[x_vars[i], "Estimate"]
      lm_p_val <- lm_summary$coefficient[x_vars[i], "Pr(>|t|)"]
      lm_extracted <- rbind(lm_extracted,
                            data.frame(
                              y = y_vars[i],
                              x = x_vars[i],
                              adj_var = adj_var,
                              x_coef = round(lm_coef,3),
                              x_pval = round(lm_p_val,3),
                              p_sig = stars.pval(lm_p_val)))
    }
  }
  return(lm_extracted)
}
```

```{r, warning = F}
options(scipen = 999)
# Sex, bmi, and age adjusted models
adj_models_1 <- lm_extract(data = subset(dat, group != "Obese"),
           x_vars = rep(c("m_i", "dexa_body_fat", "dexa_lean_mass",
                      "vat_index", "ht_adj_tkv"),
                      each = 7),
           y_vars = rep(c("avg_f", "avg_k1", "avg_k2_w_cyst", "avg_k2_wo_cyst",
                      "k2_f", "k2_k1", "ht_adj_tkv"),
                      times = 5),
           adj_var = "sex + bmi + age")

adj_models_2 <- lm_extract(data = subset(dat, group != "Obese"),
           x_vars = rep(c("m_i", "dexa_body_fat", "dexa_lean_mass",
                      "vat_index", "ht_adj_tkv"),
                      each = 7),
           y_vars = rep(c("avg_f", "avg_k1", "avg_k2_w_cyst", "avg_k2_wo_cyst",
                      "k2_f", "k2_k1", "ht_adj_tkv"),
                      times = 5),
           adj_var = "sex + age")
```

```{r}
# F adjusting for BMI
lm_f_group <- lm(avg_f ~ group + bmi, data = subset(dat, group != "OC"))
summary(lm_f_group)

# K1 adjusting for BMI
lm_k1_group <- lm(avg_k1 ~ group + bmi, data = subset(dat, group != "OC"))
summary(lm_k1_group)

# K2 adjusting for BMI
lm_k2_w_cyst_group <- lm(avg_k2_w_cyst ~ group + bmi, data = subset(dat, group != "OC"))
summary(lm_k2_w_cyst_group)

# K2 adjusting for BMI
lm_k2_wo_cyst_group <- lm(avg_k2_wo_cyst ~ group + bmi, data = subset(dat, group != "OC"))
summary(lm_k2_wo_cyst_group)

# K2 adjusting for F
lm_f_k2_w_cyst_group <- lm(avg_k2_w_cyst ~ group + avg_f, data = subset(dat, group != "OC"))
summary(lm_f_k2_w_cyst_group)

# K2 adjusting for F
lm_f_k2_wo_cyst_group <- lm(avg_k2_wo_cyst ~ group + avg_f, data = subset(dat, group != "OC"))
summary(lm_f_k2_wo_cyst_group)

# K2/F adjusting for BMI
lm_k2_f_group <- lm(k2_f ~ group + bmi, data = subset(dat, group != "OC"))
summary(lm_k2_f_group)

# Insulin sensitivity adjusting for BMI
lm_result_bmi <- lm(p1_raw_m ~ group + bmi, data = dat)
lm_result <- lm(p1_raw_m ~ group, data = dat)

summary(lm_result_bmi)
lsmeans(lm_result_bmi, specs="group", covariate="bmi")

lm_result_2_bmi <- lm(p2_raw_m ~ group + bmi, data = dat)
lm_result_2 <- lm(p2_raw_m ~ group, data = dat)
summary(lm_result_2_bmi)
lsmeans(lm_result_2_bmi, specs="group", covariate="bmi")

# F adjusting for BMI
lm_f_VAT <- lm(avg_f ~ dexa_est_vat + bmi, data = dat)
summary(lm_f_VAT)

# K1 adjusting for BMI
lm_k1_VAT <- lm(avg_k1 ~ dexa_est_vat + bmi, data = dat)
summary(lm_k1_VAT)

# HtTKV adjusting for BMI
lm_httkv_VAT <- lm(height_adj_total_kidney_volume ~ dexa_est_vat + bmi, data = dat)
summary(lm_httkv_VAT)

# K2/f adjusting for BMI
lm_k2_f_VAT <- lm(k2_f ~ dexa_est_vat + bmi, data = dat)
summary(lm_k2_f_VAT)
```

# Histograms

```{r warning = F}
# Merge OC groups
dat <- dat %>%
  mutate(group = case_when(group=="HC" ~ "LC", T~group))
# kidney tracer uptake, cortical perfusion, cortical k2/F and k2/k1, average kidney oxidation rate
dict <- as.data.frame(py$var_dict)
dict %<>% 
  mutate(avg_f = paste0("Average cortex perfusion (F)")) %>%
  mutate(avg_k1 = paste0("Average cortex tracer uptake (K1)")) %>%
  mutate(avg_k2 = paste0("Average cortex oxidation (k2)")) %>%
  mutate(avg_vb = paste0("Average cortex vb")) %>%
  mutate(avg_k1_w_cyst = paste0("Average cortex perfusion with cyst (K1)")) %>%
  mutate(avg_k1_wo_cyst = paste0("Average cortex perfusion w/o cyst (K1)")) %>%
  mutate(avg_k2_w_cyst = paste0("Average cortex perfusion with cyst (k2)")) %>%
  mutate(avg_k2_wo_cyst = paste0("Average cortex perfusion w/o cyst (k2)")) %>%
  mutate(k2_f = "k2/F") %>%
  mutate(k2_k1 = "k2/K1")

dict <- dict[intersect(names(dat), names(dict))]
dict[setdiff(names(dat), names(dict))] <- ""
Hmisc::label(dat) = dict[match(names(dat), names(dict))]
```

```{r warning = F}
f_dot <- ggplot(dat, aes(x = avg_f, fill = group)) +
  geom_histogram(stackgroups = F, binpositions = "all", binaxis = "x", aes(fill=group),
                 show.legend = F, alpha = 0.5, bins = 10,
                 position = "identity") +
  labs(x=label(dat$avg_f), y="Count") +
  theme_bw() +
  scale_fill_manual(values = c("#4f772d", "#fff9ec","#fcb1a6"))

k1_dot <- ggplot(dat, aes(x = avg_k1)) +
  geom_histogram(stackgroups = F, binpositions = "all", binaxis = "x", aes(fill=group),
                 show.legend = F, alpha = 0.5, bins = 10,
                 position = "identity") +
  labs(x=label(dat$avg_k1), y="Count") +
  theme_bw() +
  scale_fill_manual(values = c("#4f772d", "#fff9ec","#fcb1a6"))

k2_dot <- ggplot(dat, aes(x = avg_k2_w_cyst)) +
  geom_histogram(stackgroups = F, binpositions = "all", binaxis = "x", aes(fill=group),
                 show.legend = F, alpha = 0.5, bins = 10,
                 position = "identity") +
  labs(x=label(dat$avg_k2_w_cyst), y="Count") +
  theme_bw() +
  scale_fill_manual(values = c("#4f772d", "#fff9ec","#fcb1a6"))

k2_wo_cyst_dot <- ggplot(dat, aes(x = avg_k2_wo_cyst)) +
  geom_histogram(stackgroups = F, binpositions = "all", binaxis = "x", aes(fill=group),
                 show.legend = F, alpha = 0.5, bins = 10,
                 position = "identity") +
  labs(x=label(dat$avg_k2_wo_cyst), y="Count") +
  theme_bw() +
  scale_fill_manual(values = c("#4f772d", "#fff9ec","#fcb1a6"))

k2_f_dot <- ggplot(dat, aes(x = k2_f))  + 
  geom_histogram(stackgroups = F, binpositions = "all", binaxis = "x", aes(fill=group),
                 show.legend = F, alpha = 0.5, bins = 10,
                 position = "identity") +
  labs(x=label(dat$k2_f), y="Count") +
  theme_bw() +
  scale_fill_manual(values = c("#4f772d", "#fff9ec","#fcb1a6"))

k2_k1_dot <- ggplot(dat) +
  geom_histogram(aes(x = k2_k1, fill=group), 
                 alpha = 0.5, bins = 10,
                 position = "identity") +
  labs(x=label(dat$k2_k1), y="Count") +
  theme_bw()  +
  theme(legend.position = c(0.9, 0.8)) + 
  labs(fill = "Group") +
  scale_fill_manual(values = c("#4f772d", "#fff9ec","#fcb1a6"))


arrange <- ggarrange(f_dot, k1_dot, k2_dot,
                     k2_wo_cyst_dot, k2_f_dot, k2_k1_dot,
                     ncol = 2, nrow = 3, common.legend = T)
ggsave("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/dotplots.png", arrange)
```

# Incorporating JASN reviewer comments

## M/I vs. BMI plot

```{r warning = F}
mibmi_plot <- 
  ggplot(subset(dat, group != "Obese"), mapping = aes(bmi, m_i)) +
  geom_point(aes(color = group,
                 shape = group),
             size = 3) +
  labs(color = "Group",
       shape = "Group",
       x = "BMI",
       y = "M/I") +
  stat_ellipse(geom = "polygon",
               alpha = 0.4,
               aes(fill = group)) +
  theme_bw() +
  theme(axis.title.x = element_text(size = 14),
        axis.title.y = element_text(size = 14),
        legend.text = element_text(size = 14)) + 
  scale_color_manual(values = c("#386641", "#b95f89")) +
  scale_fill_manual(values = c("#386641", "#b95f89")) +
  guides(fill = FALSE)
ggsave("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/mi_bmi.png", mibmi_plot,
       height = 1500, width =2100, units = "px")
```

## Box plots

```{r warning=F}
dat <- remove_labels(dat)
dat %<>%
  mutate(group_w_class = case_when(is.na(adpkd_classification) ~ group,
                                   as.character(adpkd_classification) == "1A" |
                                     as.character(adpkd_classification) == "1B" |
                                     as.character(adpkd_classification) == "1C" ~ "Mild/Moderate ADPKD",
                                   as.character(adpkd_classification) == "1D" |
                                     as.character(adpkd_classification) == "1E" ~ "Severe ADPKD"))

dat_box_plot <- 
  subset(dat, group == "ADPKD") %>%
  mutate(group_w_class = "ADPKD",
         record_id = paste0(record_id, "_2")) %>%
  rbind(dat)
dat_box_plot$group_w_class <- factor(dat_box_plot$group_w_class,
       level = c("NWC","ADPKD", "Mild/Moderate ADPKD", "Severe ADPKD"))
dat$group <- factor(dat$group,
       level = c("NWC","ADPKD"))
dat$group_w_class <- factor(dat$group_w_class,
       level = c("NWC","Mild/Moderate ADPKD", "Severe ADPKD"))
comparison_groups = list(c("NWC", "Mild/Moderate ADPKD"),
                         c("NWC", "Severe ADPKD"),
                         c("Mild/Moderate ADPKD", "Severe ADPKD"))

dat_quantile <- data.frame(quantile = c("min", "q1", "median", "q3", "max"),
                           mild_mod_bmi = quantile(
                             subset(dat, group_w_class == "Mild/Moderate ADPKD")$bmi,
                             probs = c(0,0.25, 0.50, 0.75,1), na.rm = T),
                           severe_bmi = quantile(
                             subset(dat, group_w_class == "Severe ADPKD")$bmi,
                             probs = c(0,0.25, 0.50, 0.75,1), na.rm = T),
                           mild_mod_k1 = quantile(
                             subset(dat, group_w_class == "Mild/Moderate ADPKD")$avg_k1,
                             probs = c(0,0.25, 0.50, 0.75,1), na.rm = T),
                           severe_k1 = quantile(
                             subset(dat, group_w_class == "Severe ADPKD")$avg_k1,
                             probs = c(0,0.25, 0.50, 0.75,1), na.rm = T),
                           mild_mod_f = quantile(
                             subset(dat, group_w_class == "Mild/Moderate ADPKD")$avg_f,
                             probs = c(0,0.25, 0.50, 0.75,1), na.rm = T),
                           severe_f = quantile(
                             subset(dat, group_w_class == "Severe ADPKD")$avg_f,
                             probs = c(0,0.25, 0.50, 0.75,1), na.rm = T),
                           mild_mod_k2cyst = quantile(
                             subset(dat, group_w_class == "Mild/Moderate ADPKD")$avg_k2_w_cyst,
                             probs = c(0,0.25, 0.50, 0.75,1), na.rm = T),
                           severe_k2cyst = quantile(
                             subset(dat, group_w_class == "Severe ADPKD")$avg_k2_w_cyst,
                             probs = c(0,0.25, 0.50, 0.75,1), na.rm = T),
                           mild_mod_k2_ncyst = quantile(
                             subset(dat, group_w_class == "Mild/Moderate ADPKD")$avg_k2_wo_cyst,
                             probs = c(0,0.25, 0.50, 0.75,1), na.rm = T),
                           severe_k2_ncyst = quantile(
                             subset(dat, group_w_class == "Severe ADPKD")$avg_k2_wo_cyst,
                             probs = c(0,0.25, 0.50, 0.75,1), na.rm = T))

# K2 w/ cyst
k2cyst <- ggplot(subset(dat_box_plot, !is.na(group_w_class)),
       mapping = aes(x = group,
                     y = avg_k2_w_cyst,
                     fill = group_w_class))  +
  geom_boxplot(alpha = c(1,1,0.5,0.5)) +  
  labs(x = NULL,
       y = expression(paste("Avg ", k[2], " w/ cyst", sep="")),
       fill = "Group") + 
  theme(axis.title.x = element_text(size = 14),
        axis.title.y = element_text(size = 14),
        axis.text.x = element_text(size = 10,
                                   angle = -45), 
        legend.text = element_text(size = 14),
        panel.background = element_rect(fill = "#f2e9e4",
                                        color = "grey")) + 
  scale_fill_manual(values = c("#c2dfe3", "#fff9ec",
                                "#fcb1a6", "#fb6376")) +
  geom_jitter() +
  stat_compare_means(comparisons = comparison_groups,
                     method = "wilcox.test",
                     label = "p.signif")

# K2 w/o cyst
k2nocyst <- ggplot(subset(dat_box_plot, !is.na(group_w_class)),
       mapping = aes(x = group_w_class,
                     y = avg_k2_wo_cyst,
                     fill = group_w_class))  +
  geom_boxplot() +  
  labs(x = NULL,
       y = expression(paste("Avg ", k[2], " w/o cyst", sep="")),
       fill = "Group") + 
  theme(axis.title.x = element_text(size = 14),
        axis.title.y = element_text(size = 14),
        axis.text.x = element_text(size = 10,
                                   angle = -45), 
        legend.text = element_text(size = 14),
        panel.background = element_rect(fill = "#f2e9e4",
                                        color = "grey")) + 
  scale_fill_manual(values = c("#c2dfe3", "#fff9ec",
                                "#fcb1a6", "#fb6376")) +
  geom_jitter() +
  stat_compare_means(comparisons = comparison_groups,
                     method = "wilcox.test",
                     label = "p.signif") 

# Avg F
f_grp <- ggplot(subset(dat_box_plot, !is.na(group_w_class)),
       mapping = aes(x = group_w_class,
                     y = avg_f,
                     fill = group_w_class))  +
  geom_boxplot() +  
  labs(x = NULL,
       y = "Avg F",
       fill = "Group") + 
  theme(axis.title.x = element_text(size = 14),
        axis.title.y = element_text(size = 14),
        axis.text.x = element_text(size = 10,
                                   angle = -45), 
        legend.text = element_text(size = 14),
        panel.background = element_rect(fill = "#f2e9e4",
                                        color = "grey")) + 
  scale_fill_manual(values = c("#c2dfe3", "#fff9ec",
                                "#fcb1a6", "#fb6376")) +
  geom_jitter() +
  stat_compare_means(comparisons = comparison_groups,
                     method = "wilcox.test",
                     label = "p.signif") 

# Avg K1
k1_grp <- 
  ggplot(subset(dat_box_plot, !is.na(group_w_class)),
       mapping = aes(x = group_w_class,
                     y = avg_k1,
                     fill = group_w_class))  +
  geom_boxplot() +  
  labs(x = NULL,
       y = expression(paste("Avg ", K[1], sep="")),
       fill = "Group") + 
  theme(axis.title.x = element_text(size = 14),
        axis.title.y = element_text(size = 14),
        axis.text.x = element_text(size = 10,
                                   angle = -45), 
        legend.text = element_text(size = 14),
        panel.background = element_rect(fill = "#f2e9e4",
                                        color = "grey")) + 
  scale_fill_manual(values = c("#c2dfe3", "#fff9ec",
                                "#fcb1a6", "#fb6376")) +
  geom_jitter() +
  stat_compare_means(comparisons = comparison_groups,
                     method = "wilcox.test",
                     label = "p.signif") 

grpbox <- ggarrange(f_grp, k1_grp,
                    k2cyst, k2nocyst,
                    nrow = 2, ncol = 2,
                    common.legend = T)

ggsave("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/boxplots.png", grpbox)

boxplot_adpkd_combined_dat <- dat_box_plot %>%
  filter(!is.na(group_w_class)) %>%
  dplyr::select(record_id, group_w_class, group, bmi, avg_f, avg_k1, avg_k2_w_cyst, avg_k2_wo_cyst) %>%
  reshape(varying = c("bmi", "avg_f", "avg_k1", "avg_k2_w_cyst", "avg_k2_wo_cyst"),
          v.names = "value",
          timevar = "pet_param",
          idvar = "record_id", 
          times = c("bmi", "avg_f", "avg_k1", "avg_k2_w_cyst", "avg_k2_wo_cyst"),
          direction = "long")

boxplot_adpkd_combined_dat$group <- factor(boxplot_adpkd_combined_dat$group,
       level = c("NWC","ADPKD", "Mild/Moderate ADPKD", "Severe ADPKD"))
boxplot_adpkd_combined_dat$group_w_class <- factor(boxplot_adpkd_combined_dat$group_w_class,
       level = c("NWC","ADPKD", "Mild/Moderate ADPKD", "Severe ADPKD"))

  ############################ NEW PLOT STYLE ############################

# BMI
bmi_grp <- ggplot(subset(boxplot_adpkd_combined_dat, 
                         pet_param == "bmi" & 
                           group_w_class != "ADPKD"),
       mapping = aes(x = group,
                     y = value,
                     fill = group))  +
  scale_fill_manual(values = c("#c2dfe3", "#fff9ec", 
                                "#fcb1a6","#fb6376")) +
  labs(x = NULL,
       y = NULL,
       fill = NULL) +
  geom_boxplot(outlier.shape = NA) +
  geom_rect(data=data.frame(pet_param="bmi"), 
            aes(ymin = dat_quantile$mild_mod_bmi[2], 
                ymax = dat_quantile$mild_mod_bmi[4], 
                xmin = 1.75, 
                xmax = 1.85),
            fill = "#fcb1a6", alpha = 0.9, inherit.aes = F) +
  geom_rect(data=data.frame(pet_param="bmi"), 
            aes(ymin = dat_quantile$severe_bmi[2], 
                ymax = dat_quantile$severe_bmi[4], 
                xmin = 2.15, 
                xmax = 2.25),
            fill = "#fb6376", alpha = 0.9, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="bmi"), 
               aes(y = dat_quantile$mild_mod_bmi[3],
                   yend = dat_quantile$mild_mod_bmi[3],
                   x = 1.75, xend = 1.85), linewidth = 0.4, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="bmi"), 
               aes(y = dat_quantile$severe_bmi[3],
                   yend = dat_quantile$severe_bmi[3],
                   x = 2.15, xend = 2.25), linewidth = 0.4, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="bmi"), 
               aes(y = dat_quantile$mild_mod_bmi[1],
                   yend = dat_quantile$mild_mod_bmi[5],
                   x = 1.8, xend = 1.8),
                   linetype = "dashed", linewidth = 0.2, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="bmi"), 
               aes(y = dat_quantile$severe_bmi[1],
                   yend = dat_quantile$severe_bmi[5],
                   x = 2.2, xend = 2.2),
                   linetype = "dashed", linewidth = 0.2, inherit.aes = F) +
  new_scale_fill() +
  geom_point(aes(fill = group_w_class),
              color = "black",
              alpha = 0.7, 
              shape = 21,
             position = position_jitterdodge()) +
  facet_grid(pet_param ~ .,
             switch = "y",
             labeller = labeller(pet_param = c("bmi" = "BMI"))) +
  scale_fill_manual(values = c("#c2dfe3", "#fcb1a6", "#fb6376")) +
  scale_color_manual(values = c("#c2dfe3", "#fff9ec",
                              "#fcb1a6", "#fb6376")) +
    labs(x = NULL,
         y = NULL,
         fill = NULL) + 
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.x = element_blank(), 
        legend.position = "none",
        panel.background = element_rect(fill = "#f2e9e4",
                                        color = "grey"),
        strip.background = element_rect(fill = "#f2e9e4",
                                        color = "grey"),
        strip.text = element_text(size = 10)) +
  geom_signif(annotations = "*", y_position = c(41.5), xmin = c(1), xmax = c(2)) +
  ylim(c(19,43))

boxplot1 <-
  ggplot(subset(boxplot_adpkd_combined_dat, 
                (pet_param == "avg_f"|pet_param == "avg_k1") & 
                  group_w_class != "ADPKD"),
       mapping = aes(x = group,
                     y = value,
                     fill = group))  +
  scale_fill_manual(values = c("#c2dfe3", "#fff9ec", 
                                "#fcb1a6","#fb6376")) +
  labs(x = NULL,
       y = NULL,
       fill = NULL) +
  geom_boxplot(outlier.shape = NA) +
  geom_rect(data=data.frame(pet_param="avg_f"), 
            aes(ymin = dat_quantile$mild_mod_f[2], 
                ymax = dat_quantile$mild_mod_f[4], 
                xmin = 1.75, 
                xmax = 1.85),
            fill = "#fcb1a6", alpha = 0.9, inherit.aes = F) +
  geom_rect(data=data.frame(pet_param="avg_f"), 
            aes(ymin = dat_quantile$severe_f[2], 
                ymax = dat_quantile$severe_f[4], 
                xmin = 2.15, 
                xmax = 2.25),
            fill = "#fb6376", alpha = 0.9, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_f"), 
               aes(y = dat_quantile$mild_mod_f[3],
                   yend = dat_quantile$mild_mod_f[3],
                   x = 1.75, xend = 1.85), linewidth = 0.4, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_f"), 
               aes(y = dat_quantile$severe_f[3],
                   yend = dat_quantile$severe_f[3],
                   x = 2.15, xend = 2.25), linewidth = 0.4, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_f"), 
               aes(y = dat_quantile$mild_mod_f[1],
                   yend = dat_quantile$mild_mod_f[5],
                   x = 1.8, xend = 1.8),
                   linetype = "dashed", linewidth = 0.2, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_f"), 
               aes(y = dat_quantile$severe_f[1],
                   yend = dat_quantile$severe_f[5],
                   x = 2.2, xend = 2.2),
                   linetype = "dashed", linewidth = 0.2, inherit.aes = F) +
  geom_rect(data=data.frame(pet_param="avg_k1"), 
            aes(ymin = dat_quantile$mild_mod_k1[2], 
                ymax = dat_quantile$mild_mod_k1[4], 
                xmin = 1.75, 
                xmax = 1.85),
            fill = "#fcb1a6", alpha = 0.9, inherit.aes = F) +
  geom_rect(data=data.frame(pet_param="avg_k1"), 
            aes(ymin = dat_quantile$severe_k1[2], 
                ymax = dat_quantile$severe_k1[4], 
                xmin = 2.15, 
                xmax = 2.25),
            fill = "#fb6376", alpha = 0.9, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_k1"), 
               aes(y = dat_quantile$mild_mod_k1[3],
                   yend = dat_quantile$mild_mod_k1[3],
                   x = 1.75, xend = 1.85), linewidth = 0.4, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_k1"), 
               aes(y = dat_quantile$severe_k1[3],
                   yend = dat_quantile$severe_k1[3],
                   x = 2.15, xend = 2.25), linewidth = 0.4, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_k1"), 
               aes(y = dat_quantile$mild_mod_k1[1],
                   yend = dat_quantile$mild_mod_k1[5],
                   x = 1.8, xend = 1.8),
                   linetype = "dashed", linewidth = 0.2, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_k1"), 
               aes(y = dat_quantile$severe_k1[1],
                   yend = dat_quantile$severe_k1[5],
                   x = 2.2, xend = 2.2),
                   linetype = "dashed", linewidth = 0.2, inherit.aes = F) +    
  new_scale_fill() +
  geom_point(aes(fill = group_w_class),
              color = "black",
              alpha = 0.7, 
              shape = 21,
             position = position_jitterdodge()) +
  facet_grid(pet_param ~ .,
             switch = "y",
             labeller = labeller(pet_param = c("avg_f" = "Avg F", "avg_k1" = "Avg K1"))) +
  scale_fill_manual(values = c("#c2dfe3", "#fcb1a6", "#fb6376")) +
  scale_color_manual(values = c("#c2dfe3", "#fff9ec",
                              "#fcb1a6", "#fb6376")) +
    labs(x = NULL,
       y = NULL,
       fill = NULL) + 
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.x = element_blank(), 
        legend.position = "none",
        panel.background = element_rect(fill = "#f2e9e4",
                                        color = "grey"),
        strip.background = element_rect(fill = "#f2e9e4",
                                        color = "grey"),
        strip.text = element_text(size = 10)) +
  geom_signif(annotations = "***", y_position = c(2.5), xmin = c(1), xmax = c(2))

boxplot2 <-
  ggplot(subset(boxplot_adpkd_combined_dat,
                (pet_param == "avg_k2_w_cyst"|pet_param == "avg_k2_wo_cyst") & 
                  group_w_class != "ADPKD"),
       aes(x = group,
           y = value,
           fill = group)) + 
  scale_fill_manual(values = c("#c2dfe3", "#fff9ec", 
                                "#fcb1a6","#fb6376")) +
    labs(x = NULL,
         y = NULL,
         fill = NULL) +
  geom_boxplot(outlier.shape = NA) +
  geom_rect(data=data.frame(pet_param="avg_k2_w_cyst"), 
            aes(ymin = dat_quantile$mild_mod_k2cyst[2], 
                ymax = dat_quantile$mild_mod_k2cyst[4], 
                xmin = 1.75, 
                xmax = 1.85),
            fill = "#fcb1a6", alpha = 0.9, inherit.aes = F) +
  geom_rect(data=data.frame(pet_param="avg_k2_w_cyst"), 
            aes(ymin = dat_quantile$severe_k2cyst[2], 
                ymax = dat_quantile$severe_k2cyst[4], 
                xmin = 2.15, 
                xmax = 2.25),
            fill = "#fb6376", alpha = 0.9, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_k2_w_cyst"), 
               aes(y = dat_quantile$mild_mod_k2cyst[3],
                   yend = dat_quantile$mild_mod_k2cyst[3],
                   x = 1.75, xend = 1.85), linewidth = 0.4, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_k2_w_cyst"), 
               aes(y = dat_quantile$severe_k2cyst[3],
                   yend = dat_quantile$severe_k2cyst[3],
                   x = 2.15, xend = 2.25), linewidth = 0.4, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_k2_w_cyst"), 
               aes(y = dat_quantile$mild_mod_k2cyst[1],
                   yend = dat_quantile$mild_mod_k2cyst[5],
                   x = 1.8, xend = 1.8),
                   linetype = "dashed", linewidth = 0.2, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_k2_w_cyst"), 
               aes(y = dat_quantile$severe_k2cyst[1],
                   yend = dat_quantile$severe_k2cyst[5],
                   x = 2.2, xend = 2.2),
                   linetype = "dashed", linewidth = 0.2, inherit.aes = F) +
  geom_rect(data=data.frame(pet_param="avg_k2_wo_cyst"), 
            aes(ymin = dat_quantile$mild_mod_k2_ncyst[2], 
                ymax = dat_quantile$mild_mod_k2_ncyst[4], 
                xmin = 1.75, 
                xmax = 1.85),
            fill = "#fcb1a6", alpha = 0.9, inherit.aes = F) +
  geom_rect(data=data.frame(pet_param="avg_k2_wo_cyst"), 
            aes(ymin = dat_quantile$severe_k2_ncyst[2], 
                ymax = dat_quantile$severe_k2_ncyst[4], 
                xmin = 2.15, 
                xmax = 2.25),
            fill = "#fb6376", alpha = 0.9, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_k2_wo_cyst"), 
               aes(y = dat_quantile$mild_mod_k2_ncyst[3],
                   yend = dat_quantile$mild_mod_k2_ncyst[3],
                   x = 1.75, xend = 1.85), linewidth = 0.4, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_k2_wo_cyst"), 
               aes(y = dat_quantile$severe_k2_ncyst[3],
                   yend = dat_quantile$severe_k2_ncyst[3],
                   x = 2.15, xend = 2.25), linewidth = 0.4, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_k2_wo_cyst"), 
               aes(y = dat_quantile$mild_mod_k2_ncyst[1],
                   yend = dat_quantile$mild_mod_k2_ncyst[5],
                   x = 1.8, xend = 1.8),
                   linetype = "dashed", linewidth = 0.2, inherit.aes = F) +
  geom_segment(data=data.frame(pet_param="avg_k2_wo_cyst"), 
               aes(y = dat_quantile$severe_k2_ncyst[1],
                   yend = dat_quantile$severe_k2_ncyst[5],
                   x = 2.2, xend = 2.2),
                   linetype = "dashed", linewidth = 0.2, inherit.aes = F) +   
  new_scale_fill() +
  geom_point(aes(fill = group_w_class),
              color = "black",
              alpha = 0.7, 
              shape = 21,
             position = position_jitterdodge()) +
  facet_grid(pet_param ~ .,
             switch = "y",
             labeller = labeller(pet_param = c("avg_k2_w_cyst" = "Avg k2 w/ cyst", "avg_k2_wo_cyst" = "Avg k2 w/o cyst"))) +
  scale_fill_manual(values = c("#c2dfe3", "#fcb1a6", "#fb6376")) +
  scale_color_manual(values = c("#c2dfe3", "#fff9ec",
                              "#fcb1a6", "#fb6376")) +
    labs(x = NULL,
       y = NULL,
       fill = NULL) + 
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.x = element_blank(), 
        legend.position = "none",
        panel.background = element_rect(fill = "#f2e9e4",
                                        color = "grey"),
        strip.background = element_rect(fill = "#f2e9e4",
                                        color = "grey"),
        strip.text = element_text(size = 10)) +
  geom_signif(annotations = "***", y_position = c(0.205), xmin = c(1), xmax = c(2)) +
  ylim(c(0.12,0.215))

layout <- c(
  area(1, 3, 2, 6),
  area(3, 1, 6, 4),
  area(3, 5, 6, 9)
)
plot(layout)
bmi_grp + boxplot1+boxplot2 +
  plot_layout(design = layout, guides = "collect") & theme(legend.position = "top")

ggsave("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/boxplots.png", width = 7, height = 7)
```

# Multivariable analysis

```{r}
dat$group <- factor(dat$group,
       level = c("NWC", "ADPKD"))
dat <- label_harmonized(dat, dict)
# Height adjusted total kidney volume
## Adjusting for age and sex
summary(lm(ht_adj_tkv ~ group + age + sex, subset(dat, group != "Obese")))
summary(lm(ht_adj_tkv ~ group + age + sex, data = dat))
lsmeans(lm(ht_adj_tkv ~ group + age + sex, subset(dat, group != "Obese")), specs = "group")

# Oxidative biomarkers (F, K1, K2)
summary(lm(avg_f ~ group + age + sex, dat))
f_adj <- lsmeans(lm(avg_f ~ group + age + sex, dat), specs = "group")
contrast(f_adj, method = "pairwise", alpha=0.05)
f_adj_plot <- emmip(lm(avg_f ~ group + age + sex, dat),  ~ group, CIs = T, plotit = F) %>%
  ggplot(aes(y = group, x = yvar, color = group)) + 
  labs(x = "Adjusted average F",
       y = NULL,
       color = NULL) +
  geom_point() + 
  geom_pointrange(aes(xmin = LCL, xmax = UCL), linewidth = 1.5) +
  geom_text(aes(label = paste0(sprintf("%.2f", yvar), " (CI: ", sprintf("%.2f", LCL), ", ", sprintf("%.2f", UCL), ")"), 
                hjust = 0.5, vjust = -yvar-1.2, fontface = "bold")) +
  scale_color_manual(values = c("#fcb1a6","#fff9ec","#4f772d")) +
  coord_flip() +
  theme_bw() +
  xlim(c(0.5,2.5))

summary(lm(avg_k1 ~ group + age + sex, dat))
k1_adj <- lsmeans(lm(avg_k1 ~ group + age + sex, dat), specs = "group")
contrast(k1_adj, method = "pairwise", alpha=0.05)
k1_adj_plot <- emmip(lm(avg_k1 ~ group + age + sex, dat),  ~ group, CIs = T, plotit = F) %>%
  ggplot(aes(y = group, x = yvar, color = group)) + 
  labs(x = expression(paste("Adjusted average ", K[1], sep=" ")),
       y = NULL,
       color = NULL) +
  geom_point() + 
  geom_pointrange(aes(xmin = LCL, xmax = UCL), linewidth = 1.5) +
  geom_text(aes(label = paste0(sprintf("%.2f", yvar), " (CI: ", sprintf("%.2f", LCL), ", ", sprintf("%.2f", UCL), ")"), 
                hjust = 0.5, vjust = -yvar-1.2, fontface = "bold")) +
  scale_color_manual(values = c("#fcb1a6","#fff9ec","#4f772d")) +
  coord_flip() +
  theme_bw() +
  xlim(c(0.5,1.75))

summary(lm(avg_k2_w_cyst ~ group + age + sex, dat))
k2_w_cyst_adj <- lsmeans(lm(avg_k2_w_cyst ~ group + age + sex, dat), specs = "group")
contrast(k2_w_cyst_adj, method = "pairwise", alpha=0.05)
k2_cyst_adj_plot <- emmip(lm(avg_k2_w_cyst ~ group + age + sex, dat),  ~ group, CIs = T, plotit = F) %>%
  ggplot(aes(y = group, x = yvar, color = group)) + 
  labs(x = expression(paste("Adjusted average ", K[2], " w/ cyst", sep=" ")),
       y = NULL,
       color = NULL) +
  geom_point() + 
  geom_pointrange(aes(xmin = LCL, xmax = UCL), linewidth = 1.5) +
  geom_text(aes(label = paste0(sprintf("%.2f", yvar), " (CI: ", sprintf("%.2f", LCL), ", ", sprintf("%.2f", UCL), ")"), 
                hjust = 0.5, vjust = -yvar-(yvar+UCL+5), fontface = "bold")) +
  scale_color_manual(values = c("#fcb1a6","#fff9ec","#4f772d")) +
  coord_flip() +
  theme_bw() +
  xlim(c(0.12,0.21))

summary(lm(avg_k2_wo_cyst ~ group + age + sex, dat))
k2_wo_cyst_adj <- lsmeans(lm(avg_k2_wo_cyst ~ group + age + sex, dat), specs = "group")
contrast(k2_wo_cyst_adj, method = "pairwise", alpha=0.05)
k2_wo_cyst_adj_plot <- emmip(lm(avg_k2_wo_cyst ~ group + age + sex, dat),  ~ group, CIs = T, plotit = F) %>%
  ggplot(aes(y = group, x = yvar, color = group)) + 
  labs(x = expression(paste("Adjusted average ", K[2], " w/o cyst", sep=" ")),
       y = NULL,
       color = NULL) +
  geom_point() + 
  geom_pointrange(aes(xmin = LCL, xmax = UCL), linewidth = 1.5) +
  geom_text(aes(label = paste0(sprintf("%.2f", yvar), " (CI: ", sprintf("%.2f", LCL), ", ", sprintf("%.2f", UCL), ")"), 
                hjust = 0.5, vjust = -yvar-(yvar+UCL+5), fontface = "bold")) +
  scale_color_manual(values = c("#fcb1a6","#fff9ec","#4f772d")) +
  coord_flip() +
  theme_bw() +
  xlim(c(0.12,0.21))

adj_models <- ggarrange(f_adj_plot, k1_adj_plot, k2_cyst_adj_plot, k2_wo_cyst_adj_plot,
          ncol = 2, nrow = 2, common.legend = T) 
adj_models
ggsave("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/adj_models.png", adj_models, height = 1800, width =2800, units = "px")

```

# Voxelwise Activity Analysis

*Missing excluded*

## K1 and K2 activity

```{r include = F}
select <- dplyr::select
vw_activity_low <- dat %>% 
  mutate(avg_k1_w_cyst = rowMeans(select(., rtot_k1_w_cyst_percent_low,ltot_k1_w_cyst_percent_low), na.rm=T),
         avg_k1_wo_cyst = rowMeans(select(., rtot_k1_wo_cyst_percent_low, ltot_k1_wo_cyst_percent_low), na.rm = T),
         avg_k2_w_cyst = rowMeans(select(., rtot_k2_w_cyst_percent_low, ltot_k2_w_cyst_percent_low), na.rm = T),
         avg_k2_wo_cyst = rowMeans(select(., rtot_k2_wo_cyst_percent_low, ltot_k2_wo_cyst_percent_low), na.rm = T),
         level = "Below") %>%
  select(record_id, group, group_w_class, level, avg_k1_w_cyst, avg_k1_wo_cyst, avg_k2_w_cyst, avg_k2_wo_cyst) %>%
  arrange(group_w_class)

vw_activity_high <- dat %>%
  mutate(avg_k1_w_cyst = rowMeans(select(., rtot_k1_w_cyst_percent_high, ltot_k1_w_cyst_percent_high), na.rm = T) ,
         avg_k1_wo_cyst = rowMeans(select(., rtot_k1_wo_cyst_percent_high, ltot_k1_wo_cyst_percent_high), na.rm = T) ,
         avg_k2_w_cyst = rowMeans(select(., rtot_k2_w_cyst_percent_high, ltot_k2_w_cyst_percent_high), na.rm = T) , 
         avg_k2_wo_cyst = rowMeans(select(., rtot_k2_wo_cyst_percent_high, ltot_k2_wo_cyst_percent_high), na.rm = T) ,
         level = "Above") %>%
  select(record_id, group, group_w_class, level, avg_k1_w_cyst, avg_k1_wo_cyst, avg_k2_w_cyst, avg_k2_wo_cyst) %>%
  arrange(group_w_class)

vw_activity <- rbind(vw_activity_low, vw_activity_high)

rects <- data.frame(xstart = c(0, (count(vw_activity$group_w_class)$freq)[1]), 
                    xend = c(count(vw_activity$group_w_class)$freq), 
         col = unique(vw_activity$group_w_class))

vw_activity$level<- factor(vw_activity$level, levels = c("Below", "Above"))
vw_activity$group<- factor(vw_activity$group_w_class, levels = c("NWC", "Mild/Moderate ADPKD", "Severe ADPKD"))
vw_activity$record_id <- factor(vw_activity$record_id, levels = unique(vw_activity$record_id))
```

### Plots

```{r}
x1 = count(subset(vw_activity, !is.na(avg_k1_w_cyst))$group_w_class)$freq[1]
x2 = count(subset(vw_activity, !is.na(avg_k1_w_cyst))$group_w_class)$freq[2]
x3 = count(subset(vw_activity, !is.na(avg_k1_w_cyst))$group_w_class)$freq[3]
k1_1<- vw_activity %>%
  filter(!is.na(avg_k1_w_cyst),
         !is.na(group_w_class)) %>%
  ggplot(aes(x = record_id, y = avg_k1_w_cyst, fill = level)) +
  annotate("rect",
           xmin = c(0, 
                    x1/2+0.5,
                    (x1+x2)/2+0.5),
           xmax = c(x1/2+0.5,
                    (x1+x2)/2+0.5,
                    (x1+x2+x3)/2+0.5),
           ymin = -Inf, ymax = Inf,
           alpha = 0.5,
           fill = c("#c2dfe3", "#fcb1a6", "#fb6376")) +
  annotate("label", x = c((x1/4)+.25, ((2*x1+x2)/4)+.25, ((2*x1+2*x2+x3)/4))+.25,
           y = -75,
           label = c("NWC",
                     "ADPKD\n (Mild/Moderate)",
                     "ADPKD\n (Severe)"),
           fill = c("#c2dfe3", "#fcb1a6", "#fb6376"),
           alpha = 0.8,
           size = 3,
           label.size=0) +
  geom_bar(stat = "identity", 
           position = position_stacknudge(
             y = subset(vw_activity, 
                        level == "Above" & 
                          !is.na(avg_k1_w_cyst) & 
                          !is.na(group_w_class))$avg_k1_w_cyst)) +
  scale_y_reverse(breaks = c(-100, -75, -50, -25, 0, 25, 50, 75, 100),
                     labels = abs(c(-100, -75, -50, -25, 0, 25, 50, 75, 100)),
                     limits = c(100, -100)) +
  scale_x_discrete(label = NULL) +
  geom_hline(yintercept = 0) +
  labs(x = NULL,
       y = NULL,
       title = "K1 activity w/ cyst",
       fill = "Level") +
  scale_fill_manual(values = c("#669bbc", "#e26d5c")) +
  theme(plot.title = element_text(hjust = 0.5),
        panel.background = element_rect(fill = "white", color = "black", linetype = "solid"),
        panel.grid.major.y = element_line(color = "lightgray"),
        panel.grid.minor.y = element_line(color = "lightgray"))

x1 = count(subset(vw_activity, !is.na(avg_k1_wo_cyst))$group_w_class)$freq[1]
x2 = count(subset(vw_activity, !is.na(avg_k1_wo_cyst))$group_w_class)$freq[2]
x3 = count(subset(vw_activity, !is.na(avg_k1_wo_cyst))$group_w_class)$freq[3]
k1_2 <- vw_activity %>%
  filter(!is.na(avg_k1_wo_cyst),
         !is.na(group_w_class)) %>%
  ggplot(aes(x = record_id, y = avg_k1_wo_cyst, fill = level))  +
  annotate("rect",
           xmin = c(0, 
                    x1/2+0.5,
                    (x1+x2)/2+0.5),
           xmax = c(x1/2+0.5,
                    (x1+x2)/2+0.5,
                    (x1+x2+x3)/2+0.5),
           ymin = -Inf, ymax = Inf,
           alpha = 0.5,
           fill = c("#c2dfe3", "#fcb1a6", "#fb6376")) +
  annotate("label", x = c((x1/4)+.25, ((2*x1+x2)/4)+.25, ((2*x1+2*x2+x3)/4))+.25,
           y = -75,
           label = c("NWC",
                     "ADPKD\n (Mild/Moderate)",
                     "ADPKD\n (Severe)"),
           fill = c("#c2dfe3", "#fcb1a6", "#fb6376"),
           alpha = 0.8,
           size = 3,
           label.size=0) +
  geom_bar(stat = "identity", 
           position = position_stacknudge(
             y = subset(vw_activity, 
                        level == "Above" & 
                          !is.na(avg_k1_wo_cyst) &
                          !is.na(group_w_class))$avg_k1_wo_cyst)) +
  scale_y_reverse(breaks = c(-100, -75, -50, -25, 0, 25, 50, 75, 100),
                     labels = abs(c(-100, -75, -50, -25, 0, 25, 50, 75, 100)),
                     limits = c(100, -100)) +
  scale_x_discrete(label = NULL) +
  geom_hline(yintercept = 0) +
  labs(x = NULL,
       y = NULL,
       title = "K1 activity w/o cyst",
       fill = "Level") +
  scale_fill_manual(values = c("#669bbc", "#e26d5c")) +
  theme(plot.title = element_text(hjust = 0.5),
        panel.background = element_rect(fill = "white", color = "black", linetype = "solid"),
        panel.grid.major.y = element_line(color = "lightgray"),
        panel.grid.minor.y = element_line(color = "lightgray"))

x1 = count(subset(vw_activity, !is.na(avg_k2_w_cyst))$group_w_class)$freq[1]
x2 = count(subset(vw_activity, !is.na(avg_k2_w_cyst))$group_w_class)$freq[2]
x3 = count(subset(vw_activity, !is.na(avg_k2_w_cyst))$group_w_class)$freq[3]
k2_1 <- vw_activity %>%
  filter(!is.na(avg_k2_w_cyst),
         !is.na(group_w_class)) %>%
  ggplot(aes(x = record_id, y = avg_k2_w_cyst, fill = level)) +
  annotate("rect",
           xmin = c(0, 
                    x1/2+0.5,
                    (x1+x2)/2+0.5),
           xmax = c(x1/2+0.5,
                    (x1+x2)/2+0.5,
                    (x1+x2+x3)/2+0.5),
           ymin = -Inf, ymax = Inf,
           alpha = 0.5,
           fill = c("#c2dfe3", "#fcb1a6", "#fb6376")) +
  annotate("label", x = c((x1/4)+.25, ((2*x1+x2)/4)+.25, ((2*x1+2*x2+x3)/4))+.25,
           y = -75,
           label = c("NWC",
                     "ADPKD\n (Mild/Moderate)",
                     "ADPKD\n (Severe)"),
           fill = c("#c2dfe3", "#fcb1a6", "#fb6376"),
           alpha = 0.8,
           size = 3,
           label.size=0) +
  geom_bar(stat = "identity", 
           position = position_stacknudge(
             y = subset(vw_activity, 
                        level == "Above" & 
                          !is.na(avg_k2_w_cyst) & 
                          !is.na(group_w_class))$avg_k2_w_cyst)) +
  scale_y_reverse(breaks = c(-100, -75, -50, -25, 0, 25, 50, 75, 100),
                     labels = abs(c(-100, -75, -50, -25, 0, 25, 50, 75, 100)),
                     limits = c(100, -100)) +
  scale_x_discrete(label = NULL) +
  geom_hline(yintercept = 0) +
  labs(x = NULL,
       y = NULL,
       title = "k2 activity w/ cyst",
       fill = "Level") +
  scale_fill_manual(values = c("#669bbc", "#e26d5c")) +
  theme(plot.title = element_text(hjust = 0.5),
        panel.background = element_rect(fill = "white", color = "black", linetype = "solid"),
        panel.grid.major.y = element_line(color = "lightgray"),
        panel.grid.minor.y = element_line(color = "lightgray"))

x1 = count(subset(vw_activity, !is.na(avg_k2_wo_cyst))$group_w_class)$freq[1]
x2 = count(subset(vw_activity, !is.na(avg_k2_wo_cyst))$group_w_class)$freq[2]
x3 = count(subset(vw_activity, !is.na(avg_k2_wo_cyst))$group_w_class)$freq[3]
k2_2 <- vw_activity %>%
  filter(!is.na(avg_k2_wo_cyst),
         !is.na(group_w_class)) %>%
  ggplot(aes(x = record_id, y = avg_k2_wo_cyst, fill = level)) + 
  annotate("rect",
           xmin = c(0, 
                    x1/2+0.5,
                    (x1+x2)/2+0.5),
           xmax = c(x1/2+0.5,
                    (x1+x2)/2+0.5,
                    (x1+x2+x3)/2+0.5),
           ymin = -Inf, ymax = Inf,
           alpha = 0.5,
           fill = c("#c2dfe3", "#fcb1a6", "#fb6376")) +
  annotate("label", x = c((x1/4)+.25, ((2*x1+x2)/4)+.25, ((2*x1+2*x2+x3)/4))+.25,
           y = -75,
           label = c("NWC",
                     "ADPKD\n (Mild/Moderate)",
                     "ADPKD\n (Severe)"),
           fill = c("#c2dfe3", "#fcb1a6", "#fb6376"),
           alpha = 0.8,
           size = 3,
           label.size=0) +
  geom_bar(stat = "identity", 
           position = position_stacknudge(
             y = subset(vw_activity, 
                        level == "Above" & 
                          !is.na(avg_k2_wo_cyst) & 
                          !is.na(group_w_class))$avg_k2_wo_cyst)) +
  scale_y_reverse(breaks = c(-100, -75, -50, -25, 0, 25, 50, 75, 100),
                     labels = abs(c(-100, -75, -50, -25, 0, 25, 50, 75, 100)),
                     limits = c(100, -100)) +
  scale_x_discrete(labels = NULL) +
  geom_hline(yintercept = 0) +
  labs(x = NULL,
       y = NULL,
       title = "k2 activity w/o cyst",
       fill = "Level") +
  scale_fill_manual(values = c("#669bbc", "#e26d5c")) +
  theme(plot.title = element_text(hjust = 0.5),
        panel.background = element_rect(fill = "white", color = "black", linetype = "solid"),
        panel.grid.major.y = element_line(color = "lightgray"),
        panel.grid.minor.y = element_line(color = "lightgray"))
```

```{r include=F}
library(grid)
k1_k2 <- ggarrange(k1_1, k1_2,
          k2_1, k2_2,
          ncol = 2, nrow = 2, common.legend = T)

k1_k2 <- annotate_figure(k1_k2, left = textGrob("Proportions of voxel with average activity\n more than 2 standard deviations from the lean mean", rot = 90, vjust = .5, gp = gpar(cex = 1)),
                    bottom = textGrob("Participant", gp = gpar(cex = 1.3)))

ggsave("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/k1_k2.png", k1_k2, height = 2000, width = 2500, units = "px")
```

# Archive

#### Correlation

Initially written for first KI and JASN submissions; function written to collapse and format differently.

Recreated avg k1 and k2 activities plot.

```{r, include = F}
# dat_correlation <- dat %>% filter(group!="Obese") %>%
#   mutate(p2_raw_leanm_row = p2_raw_leanm, 
#          m_i_row = m_i,
#          dexa_fat_kg_row = dexa_fat_kg, 
#          dexa_lean_kg_row = dexa_lean_kg,
#          dexa_est_vat_row = dexa_est_vat,
#          ffa_suppression_1_row = ffa_suppression_1,
#          ffa_suppression_2_row = ffa_suppression_2) %>%
#   select(p2_raw_leanm, 
#          m_i, 
#          dexa_fat_kg, 
#          dexa_lean_kg, 
#          dexa_est_vat, 
#          height_adj_total_kidney_volume, 
#          right_kidney_volume_ml, 
#          height_adj_right_kidney_volume, 
#          left_kidney_volume_ml, 
#          height_adj_left_kidney_volume, 
#          total_liver_volume_ml, 
#          total_cyst_volume_ml, 
#          total_number_of_cysts, 
#          ffa_suppression_1, 
#          ffa_suppression_2,  
#          p2_raw_leanm_row, 
#          m_i_row, 
#          dexa_fat_kg_row, 
#          dexa_lean_kg_row, 
#          dexa_est_vat_row, 
#          lc_f, 
#                          rc_f,
#                          lc_vb, 
#                          rc_vb, 
#                          lc_k1, 
#                          rc_k1, 
#                          lc_k2, 
#                          rc_k2,
#                          ltot_k1_w_cyst,	
#                          ltot_k1_wo_cyst,
#                          rtot_k1_w_cyst,	
#                          rtot_k1_wo_cyst,	
#                          ltot_k2_w_cyst,	
#                          ltot_k2_wo_cyst, 
#                          rtot_k2_w_cyst,
#                          rtot_k2_wo_cyst,
#          avg_f, 
#          avg_k1, 
#          avg_k2_w_cyst, 
#          avg_k2_wo_cyst, 
#          k2_f, 
#          k2_k1, 
#          ffa_suppression_1_row, 
#          ffa_suppression_2_row
#          )
# 
# # Correlation matrix in table format
# M_table <- as.data.frame(cor(y = dat_correlation[,1:15],
#                              x=dat_correlation[,16:ncol(dat_correlation)], 
#                              use = "pairwise.complete.obs")) %>%
#   select(p2_raw_leanm, m_i, dexa_fat_kg, dexa_lean_kg, dexa_est_vat,
#          height_adj_total_kidney_volume, right_kidney_volume_ml,
#          height_adj_right_kidney_volume, left_kidney_volume_ml,
#          height_adj_left_kidney_volume, total_liver_volume_ml, 
#          total_cyst_volume_ml, total_number_of_cysts, 
#          ffa_suppression_1, ffa_suppression_2)
# 
# # Compute p-values to add to matrix table
# res2 <- rcorr(as.matrix(dat_correlation))
# corr_pval <- as.data.frame(res2$P) %>%
#   select(starts_with("p")|
#            starts_with("m_i")|
#            starts_with("ffa")|
#            starts_with("dexa")|
#            starts_with("total")|
#            starts_with("height")|
#            starts_with("right")|
#            starts_with("left")) %>%
#   sapply(pvalue) 
# corr_pval <- as.data.frame(corr_pval) %>% 
#   select(p2_raw_leanm, m_i, dexa_fat_kg, dexa_lean_kg, dexa_est_vat, 
#          height_adj_total_kidney_volume, right_kidney_volume_ml, 
#          height_adj_right_kidney_volume, left_kidney_volume_ml, 
#          height_adj_left_kidney_volume, total_liver_volume_ml, 
#          total_cyst_volume_ml, total_number_of_cysts, 
#          ffa_suppression_1, ffa_suppression_2)
# colnames(corr_pval) <- rep("p_value", ncol(corr_pval))
# 
# # Add p-values to matrix table
# corr_pval = corr_pval[16:nrow(corr_pval),]
# M_table_p <- bind_cols(M_table, corr_pval) %>%
#   relocate(map(1:ncol(M_table), ~ c(.x, .x + ncol(M_table))) %>% unlist())
# ```
# 
# ```{r include=F}
# # Label variables
# 
# 
# 
# 
# dat <- label_harmonized(dat, dict)
# 
# row.names(M_table_p) <- dict[match(row.names(M_table_p), names(dict))]
# correlation_1 <- M_table_p 
# write.csv(correlation_1, "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/correlation_1.csv", row.names = T)
# ```
# 
# ## Correlation matrix (table)
# 
# ```{r fig.height=10}
# # Matrix table with p-values
# kable(M_table_p, 
#       col.names = rep(c("Correlation", "p-value"), ncol(M_table_p)/2), 
#       caption = "Correlation", 
#       digits = c(1,4),
#       align = rep("r", ncol(M_table_p))) %>%
#   kable_styling(bootstrap_options = c("hover"),
#             full_width = F, 
#             fixed_thead = T) %>%
#   add_header_above(header = c(" "=1, 
#                      setNames(2, Hmisc::label(M_table_p)[1]), 
#                      setNames(2, Hmisc::label(M_table_p)[3]), 
#                      setNames(2, Hmisc::label(M_table_p)[5]), 
#                      setNames(2, Hmisc::label(M_table_p)[7]), 
#                      setNames(2, Hmisc::label(M_table_p)[9]), 
#                      setNames(2, Hmisc::label(M_table_p)[11]), 
#                      setNames(2, Hmisc::label(M_table_p)[13]), 
#                      setNames(2, Hmisc::label(M_table_p)[15]), 
#                      setNames(2, Hmisc::label(M_table_p)[17]), 
#                      setNames(2, Hmisc::label(M_table_p)[19]), 
#                      setNames(2, Hmisc::label(M_table_p)[21]), 
#                      setNames(2, Hmisc::label(M_table_p)[23]),
#                      setNames(2, Hmisc::label(M_table_p)[25]),
#                      setNames(2, Hmisc::label(M_table_p)[27]),
#                      setNames(2, Hmisc::label(M_table_p)[29]))) %>%
#   column_spec(1, width_min = "5in", border_right=T, bold = T) %>%
#   column_spec(3, border_right=T) %>%
#   column_spec(5, border_right=T) %>%
#   column_spec(7, border_right=T) %>%
#   column_spec(9, border_right=T) %>%
#   column_spec(11, border_right=T) %>%
#   column_spec(13, border_right=T) %>%
#   column_spec(15, border_right=T) %>%
#   column_spec(17, border_right=T) %>%
#   column_spec(19, border_right=T) %>%
#   column_spec(21, border_right=T) %>%
#   column_spec(23, border_right=T) %>%
#   column_spec(25, border_right=T) %>%
#   column_spec(27, border_right=T) %>%
#   column_spec(29, border_right=T)  
# ```
# 
# ## Correlation matrix (plot)
# 
# ```{r fig.height=15,fig.width=15}
# # Plot correlation matrix
# M = cor(dat_correlation[,1:ncol(dat_correlation)], use = "pairwise.complete.obs") 
# testRes = cor.mtest(dat_correlation[,1:ncol(dat_correlation)]) 
# corrplot(M, p.mat = testRes$p, method = 'circle', type = 'lower', insig='blank', addCoef.col ='white', order = 'AOE', diag=FALSE, number.cex = 0.8)
# ```
# 
# ```{r include=F}
# # Correlation matrix by PKD
# df_PKD <- dat %>%
#   filter(group == "PKD")
# 
# # Select relevant variables for the correlation matrix
# dat_correlation <- df_PKD %>%
#   mutate(p2_raw_leanm_row = p2_raw_leanm, 
#          m_i_row = m_i,
#          dexa_fat_kg_row = dexa_fat_kg, 
#          dexa_lean_kg_row = dexa_lean_kg,
#          dexa_est_vat_row = dexa_est_vat,
#          ffa_suppression_1_row = ffa_suppression_1,
#          ffa_suppression_2_row = ffa_suppression_2) %>%
#   select(p2_raw_leanm, 
#          m_i, 
#          dexa_fat_kg, 
#          dexa_lean_kg, 
#          dexa_est_vat, 
#          height_adj_total_kidney_volume, 
#          right_kidney_volume_ml, 
#          height_adj_right_kidney_volume, 
#          left_kidney_volume_ml, 
#          height_adj_left_kidney_volume, 
#          total_liver_volume_ml, 
#          total_cyst_volume_ml, 
#          total_number_of_cysts, 
#          ffa_suppression_1, 
#          ffa_suppression_2,  
#          p2_raw_leanm_row, 
#          m_i_row, 
#          dexa_fat_kg_row, 
#          dexa_lean_kg_row, 
#          dexa_est_vat_row, 
#          lc_f, 
#          rc_f,
#          lc_vb, 
#          rc_vb, 
#          lc_k1, 
#          rc_k1, 
#          lc_k2, 
#          rc_k2,
#          ltot_k1_w_cyst,	
#          ltot_k1_wo_cyst,
#          rtot_k1_w_cyst,	
#          rtot_k1_wo_cyst,	
#          ltot_k2_w_cyst,	
#          ltot_k2_wo_cyst, 
#          rtot_k2_w_cyst,
#          rtot_k2_wo_cyst, 
#          avg_f, 
#          avg_k1, 
#          avg_k2_w_cyst, 
#          avg_k2_wo_cyst, 
#          k2_f, 
#          k2_k1, 
#          ffa_suppression_1_row, 
#          ffa_suppression_2_row
#          )
# 
# # Correlation matrix in table format
# M_table <- as.data.frame(cor(y = dat_correlation[,1:15],
#                              x=dat_correlation[,16:ncol(dat_correlation)], 
#                              use = "pairwise.complete.obs")) %>%
#   select(p2_raw_leanm, m_i, dexa_fat_kg, dexa_lean_kg, dexa_est_vat,
#          height_adj_total_kidney_volume, right_kidney_volume_ml,
#          height_adj_right_kidney_volume, left_kidney_volume_ml,
#          height_adj_left_kidney_volume, total_liver_volume_ml, 
#          total_cyst_volume_ml, total_number_of_cysts, 
#          ffa_suppression_1, ffa_suppression_2)
# 
# # Compute p-values to add to matrix table
# res2 <- rcorr(as.matrix(dat_correlation))
# corr_pval <- as.data.frame(res2$P) %>%
#   select(starts_with("p")|
#            starts_with("m_i")|
#            starts_with("ffa")|
#            starts_with("dexa")|
#            starts_with("total")|
#            starts_with("height")|
#            starts_with("right")|
#            starts_with("left")) %>%
#   sapply(pvalue) 
# corr_pval <- as.data.frame(corr_pval) %>% 
#   select(p2_raw_leanm, m_i, dexa_fat_kg, dexa_lean_kg, dexa_est_vat, 
#          height_adj_total_kidney_volume, right_kidney_volume_ml, 
#          height_adj_right_kidney_volume, left_kidney_volume_ml, 
#          height_adj_left_kidney_volume, total_liver_volume_ml, 
#          total_cyst_volume_ml, total_number_of_cysts, 
#          ffa_suppression_1, ffa_suppression_2)
# colnames(corr_pval) <- rep("p_value", ncol(corr_pval))
# 
# # Add p-values to matrix table
# corr_pval = corr_pval[16:nrow(corr_pval),]
# M_table_p <- bind_cols(M_table, corr_pval) %>%
#   relocate(map(1:ncol(M_table), ~ c(.x, .x + ncol(M_table))) %>% unlist())
# 
# # Label variables
# dict <- as.data.frame(py$var_dict)
# dict <- dict %>%  
#   mutate(height_adj_total_kidney_volume = "Height Adjusted Total Kidney Volume") %>%
#   mutate(height_adj_left_kidney_volume = "Height Adjusted Left Kidney Volume") %>%
#   mutate(height_adj_right_kidney_volume = "Height Adjusted Right Kidney Volume") %>%
#   mutate(m_i = paste0("M/I")) %>%
#   mutate(ffa_suppression_1 = "FFA Suppression P1") %>%
#   mutate(ffa_suppression_2 = "FFA Suppression P2")
# dict <- dict[intersect(names(M_table_p), names(dict))]
# dict[setdiff(names(M_table_p), names(dict))] <- "p-value"
# Hmisc::label(M_table_p) = dict[match(names(M_table_p), names(dict))]
# dict <- as.data.frame(py$var_dict)
# dict %<>%
#   mutate(m_i_row = paste0("M/I")) %>%
#   mutate(p2_raw_leanm_row = p2_raw_leanm) %>%
#   mutate(dexa_fat_kg_row = dexa_fat_kg) %>%
#   mutate(dexa_lean_kg_row = dexa_lean_kg) %>%
#   mutate(dexa_est_vat_row = dexa_est_vat) %>%
#   mutate(ltot_k1_w_cyst = paste0("Left Total Kidney K1 w/ cyst (Voxel-wise)")) %>%
#   mutate(ltot_k2_w_cyst = paste0("Left Total Kidney K2 w/ cyst (Voxel-wise)")) %>%
#   mutate(ltot_k1_wo_cyst = paste0("Left Total Kidney K1 wo/ cyst (Voxel-wise)")) %>%
#   mutate(ltot_k2_wo_cyst = paste0("Left Total Kidney K2 wo/ cyst (Voxel-wise)")) %>%
#   mutate(rtot_k1_w_cyst = paste0("Right Total Kidney K1 w/ cyst (Voxel-wise)")) %>%
#   mutate(rtot_k2_w_cyst = paste0("Right Total Kidney K2 w/ cyst (Voxel-wise)")) %>%
#   mutate(rtot_k1_wo_cyst = paste0("Right Total Kidney K1 wo/ cyst (Voxel-wise)")) %>%
#   mutate(rtot_k2_wo_cyst = paste0("Right Total Kidney K2 wo/ cyst (Voxel-wise)")) %>%
#   mutate(avg_f = paste0("Average cortex perfusion (F)")) %>%
#   mutate(avg_k1 = paste0("Average cortex tracer uptake (k1)")) %>%
#   mutate(avg_k2 = paste0("Average cortex oxidation (k2)")) %>%
#   mutate(avg_vb = paste0("Average cortex vb")) %>%
#   mutate(avg_k1_w_cyst = paste0("Average cortex perfusion with cyst (K1)")) %>%
#   mutate(avg_k1_wo_cyst = paste0("Average cortex perfusion w/o cyst(K1)")) %>%
#   mutate(avg_k2_w_cyst = paste0("Average cortex perfusion with cyst (K2)")) %>%
#   mutate(avg_k2_wo_cyst = paste0("Average cortex perfusion w/o cyst(K2)")) %>%
#   mutate(k2_f = "k2/f") %>%
#   mutate(k2_k1 = "k2/k1") %>%
#   mutate(ffa_suppression_1_row = "FFA Suppression P1") %>%
#   mutate(ffa_suppression_2_row = "FFA Suppression P2")
# 
# row.names(M_table_p) <- dict[match(row.names(M_table_p), names(dict))]
# correlation_2 <- M_table_p 
# write.csv(correlation_2, "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/correlation_2.csv", row.names = T)
# ```
# 
# #### Correlation matrix by PKD
# 
# ```{r}
# # Matrix table with p-values
# kable(M_table_p, 
#       col.names = rep(c("Correlation", "p-value"), ncol(M_table_p)/2), 
#       caption = "Correlation", 
#       digits = c(1,4),
#       align = rep("r", ncol(M_table_p))) %>%
#   kable_styling(bootstrap_options = c("hover"),
#             full_width = F, 
#             fixed_thead = T) %>%
#   add_header_above(header = c(" "=1, 
#                      setNames(2, Hmisc::label(M_table_p)[1]), 
#                      setNames(2, Hmisc::label(M_table_p)[3]), 
#                      setNames(2, Hmisc::label(M_table_p)[5]), 
#                      setNames(2, Hmisc::label(M_table_p)[7]), 
#                      setNames(2, Hmisc::label(M_table_p)[9]), 
#                      setNames(2, Hmisc::label(M_table_p)[11]), 
#                      setNames(2, Hmisc::label(M_table_p)[13]), 
#                      setNames(2, Hmisc::label(M_table_p)[15]), 
#                      setNames(2, Hmisc::label(M_table_p)[17]), 
#                      setNames(2, Hmisc::label(M_table_p)[19]), 
#                      setNames(2, Hmisc::label(M_table_p)[21]), 
#                      setNames(2, Hmisc::label(M_table_p)[23]),
#                      setNames(2, Hmisc::label(M_table_p)[25]),
#                      setNames(2, Hmisc::label(M_table_p)[27]),
#                      setNames(2, Hmisc::label(M_table_p)[29]))) %>%
#   column_spec(1, width_min = "5in", border_right=T, bold = T) %>%
#   column_spec(3, border_right=T) %>%
#   column_spec(5, border_right=T) %>%
#   column_spec(7, border_right=T) %>%
#   column_spec(9, border_right=T) %>%
#   column_spec(11, border_right=T) %>%
#   column_spec(13, border_right=T) %>%
#   column_spec(15, border_right=T) %>%
#   column_spec(17, border_right=T) %>%
#   column_spec(19, border_right=T) %>%
#   column_spec(21, border_right=T) %>%
#   column_spec(23, border_right=T) %>%
#   column_spec(25, border_right=T) %>%
#   column_spec(27, border_right=T) %>%
#   column_spec(29, border_right=T)  
# ```
# 
# ```{r include=F}
# # Correlation matrix by HC
# df_HC <- dat %>%
#   filter(group == "HC")
# 
# # Select relevant variables for the correlation matrix
# dat_correlation <- df_HC %>%
#   mutate(p2_raw_leanm_row = p2_raw_leanm, 
#          m_i_row = m_i,
#          dexa_fat_kg_row = dexa_fat_kg, 
#          dexa_lean_kg_row = dexa_lean_kg,
#          dexa_est_vat_row = dexa_est_vat,
#          ffa_suppression_1_row = ffa_suppression_1,
#          ffa_suppression_2_row = ffa_suppression_2) %>%
#   select(p2_raw_leanm, 
#          m_i, 
#          dexa_fat_kg, 
#          dexa_lean_kg, 
#          dexa_est_vat, 
#          height_adj_total_kidney_volume, 
#          right_kidney_volume_ml, 
#          height_adj_right_kidney_volume, 
#          left_kidney_volume_ml, 
#          height_adj_left_kidney_volume, 
#          total_liver_volume_ml, 
#          total_cyst_volume_ml, 
#          total_number_of_cysts, 
#          ffa_suppression_1, 
#          ffa_suppression_2,  
#          p2_raw_leanm_row, 
#          m_i_row, 
#          dexa_fat_kg_row, 
#          dexa_lean_kg_row, 
#          dexa_est_vat_row, 
#          lc_f, 
#          rc_f,
#          lc_vb, 
#          rc_vb, 
#          lc_k1, 
#          rc_k1, 
#          lc_k2, 
#          rc_k2,
#          ltot_k1_w_cyst,	
#          ltot_k1_wo_cyst,
#          rtot_k1_w_cyst,	
#          rtot_k1_wo_cyst,	
#          ltot_k2_w_cyst,	
#          ltot_k2_wo_cyst, 
#          rtot_k2_w_cyst,
#          rtot_k2_wo_cyst, 
#          avg_f, 
#          avg_k1, 
#          avg_k2_w_cyst, 
#          avg_k2_wo_cyst, 
#          k2_f, 
#          k2_k1, 
#          ffa_suppression_1_row, 
#          ffa_suppression_2_row
#          )
# 
# # Correlation matrix in table format
# M_table <- as.data.frame(cor(y = dat_correlation[,1:15],
#                              x=dat_correlation[,16:ncol(dat_correlation)], 
#                              use = "pairwise.complete.obs")) %>%
#   select(p2_raw_leanm, m_i, dexa_fat_kg, dexa_lean_kg, dexa_est_vat,
#          height_adj_total_kidney_volume, right_kidney_volume_ml,
#          height_adj_right_kidney_volume, left_kidney_volume_ml,
#          height_adj_left_kidney_volume, total_liver_volume_ml, 
#          total_cyst_volume_ml, total_number_of_cysts, 
#          ffa_suppression_1, ffa_suppression_2)
# 
# # Compute p-values to add to matrix table
# res2 <- rcorr(as.matrix(dat_correlation))
# corr_pval <- as.data.frame(res2$P) %>%
#   select(starts_with("p")|
#            starts_with("m_i")|
#            starts_with("ffa")|
#            starts_with("dexa")|
#            starts_with("total")|
#            starts_with("height")|
#            starts_with("right")|
#            starts_with("left")) %>%
#   sapply(pvalue) 
# corr_pval <- as.data.frame(corr_pval) %>% 
#   select(p2_raw_leanm, m_i, dexa_fat_kg, dexa_lean_kg, dexa_est_vat, 
#          height_adj_total_kidney_volume, right_kidney_volume_ml, 
#          height_adj_right_kidney_volume, left_kidney_volume_ml, 
#          height_adj_left_kidney_volume, total_liver_volume_ml, 
#          total_cyst_volume_ml, total_number_of_cysts, 
#          ffa_suppression_1, ffa_suppression_2)
# colnames(corr_pval) <- rep("p_value", ncol(corr_pval))
# 
# # Add p-values to matrix table
# corr_pval = corr_pval[16:nrow(corr_pval),]
# M_table_p <- bind_cols(M_table, corr_pval) %>%
#   relocate(map(1:ncol(M_table), ~ c(.x, .x + ncol(M_table))) %>% unlist())
# 
# # Label variables
# dict <- as.data.frame(py$var_dict)
# dict <- dict %>%  
#   mutate(height_adj_total_kidney_volume = "Height Adjusted Total Kidney Volume") %>%
#   mutate(height_adj_left_kidney_volume = "Height Adjusted Left Kidney Volume") %>%
#   mutate(height_adj_right_kidney_volume = "Height Adjusted Right Kidney Volume") %>%
#   mutate(m_i = paste0("M/I")) %>%
#   mutate(ffa_suppression_1 = "FFA Suppression P1") %>%
#   mutate(ffa_suppression_2 = "FFA Suppression P2")
# dict <- dict[intersect(names(M_table_p), names(dict))]
# dict[setdiff(names(M_table_p), names(dict))] <- "p-value"
# Hmisc::label(M_table_p) = dict[match(names(M_table_p), names(dict))]
# dict <- as.data.frame(py$var_dict)
# dict %<>%
#   mutate(m_i_row = paste0("M/I")) %>%
#   mutate(p2_raw_leanm_row = p2_raw_leanm) %>%
#   mutate(dexa_fat_kg_row = dexa_fat_kg) %>%
#   mutate(dexa_lean_kg_row = dexa_lean_kg) %>%
#   mutate(dexa_est_vat_row = dexa_est_vat) %>%
#   mutate(ltot_k1_w_cyst = paste0("Left Total Kidney K1 w/ cyst (Voxel-wise)")) %>%
#   mutate(ltot_k2_w_cyst = paste0("Left Total Kidney K2 w/ cyst (Voxel-wise)")) %>%
#   mutate(ltot_k1_wo_cyst = paste0("Left Total Kidney K1 wo/ cyst (Voxel-wise)")) %>%
#   mutate(ltot_k2_wo_cyst = paste0("Left Total Kidney K2 wo/ cyst (Voxel-wise)")) %>%
#   mutate(rtot_k1_w_cyst = paste0("Right Total Kidney K1 w/ cyst (Voxel-wise)")) %>%
#   mutate(rtot_k2_w_cyst = paste0("Right Total Kidney K2 w/ cyst (Voxel-wise)")) %>%
#   mutate(rtot_k1_wo_cyst = paste0("Right Total Kidney K1 wo/ cyst (Voxel-wise)")) %>%
#   mutate(rtot_k2_wo_cyst = paste0("Right Total Kidney K2 wo/ cyst (Voxel-wise)")) %>%
#   mutate(avg_f = paste0("Average cortex perfusion (F)")) %>%
#   mutate(avg_k1 = paste0("Average cortex tracer uptake (k1)")) %>%
#   mutate(avg_k2 = paste0("Average cortex oxidation (k2)")) %>%
#   mutate(avg_vb = paste0("Average cortex vb")) %>%
#   mutate(avg_k1_w_cyst = paste0("Average cortex perfusion with cyst (K1)")) %>%
#   mutate(avg_k1_wo_cyst = paste0("Average cortex perfusion w/o cyst(K1)")) %>%
#   mutate(avg_k2_w_cyst = paste0("Average cortex perfusion with cyst (K2)")) %>%
#   mutate(avg_k2_wo_cyst = paste0("Average cortex perfusion w/o cyst(K2)")) %>%
#   mutate(k2_f = "k2/f") %>%
#   mutate(k2_k1 = "k2/k1") %>%
#   mutate(ffa_suppression_1_row = "FFA Suppression P1") %>%
#   mutate(ffa_suppression_2_row = "FFA Suppression P2")
# 
# row.names(M_table_p) <- dict[match(row.names(M_table_p), names(dict))]
# correlation_3 <- M_table_p 
# write.csv(correlation_3, "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/correlation_3.csv", row.names = T)
# ```
# 
# #### Correlation matrix by HC
# 
# ```{r}
# # Matrix table with p-values
# kable(M_table_p, 
#       col.names = rep(c("Correlation", "p-value"), ncol(M_table_p)/2), 
#       caption = "Correlation", 
#       digits = c(1,4),
#       align = rep("r", ncol(M_table_p))) %>%
#   kable_styling(bootstrap_options = c("hover"),
#             full_width = F, 
#             fixed_thead = T) %>%
#   add_header_above(header = c(" "=1, 
#                      setNames(2, Hmisc::label(M_table_p)[1]), 
#                      setNames(2, Hmisc::label(M_table_p)[3]), 
#                      setNames(2, Hmisc::label(M_table_p)[5]), 
#                      setNames(2, Hmisc::label(M_table_p)[7]), 
#                      setNames(2, Hmisc::label(M_table_p)[9]), 
#                      setNames(2, Hmisc::label(M_table_p)[11]), 
#                      setNames(2, Hmisc::label(M_table_p)[13]), 
#                      setNames(2, Hmisc::label(M_table_p)[15]), 
#                      setNames(2, Hmisc::label(M_table_p)[17]), 
#                      setNames(2, Hmisc::label(M_table_p)[19]), 
#                      setNames(2, Hmisc::label(M_table_p)[21]), 
#                      setNames(2, Hmisc::label(M_table_p)[23]),
#                      setNames(2, Hmisc::label(M_table_p)[25]),
#                      setNames(2, Hmisc::label(M_table_p)[27]),
#                      setNames(2, Hmisc::label(M_table_p)[29]))) %>%
#   column_spec(1, width_min = "5in", border_right=T, bold = T) %>%
#   column_spec(3, border_right=T) %>%
#   column_spec(5, border_right=T) %>%
#   column_spec(7, border_right=T) %>%
#   column_spec(9, border_right=T) %>%
#   column_spec(11, border_right=T) %>%
#   column_spec(13, border_right=T) %>%
#   column_spec(15, border_right=T) %>%
#   column_spec(17, border_right=T) %>%
#   column_spec(19, border_right=T) %>%
#   column_spec(21, border_right=T) %>%
#   column_spec(23, border_right=T) %>%
#   column_spec(25, border_right=T) %>%
#   column_spec(27, border_right=T) %>%
#   column_spec(29, border_right=T)  
# ```
# 
# #### Correlation matrix for PET
# 
# ```{r include=F}
# # Select relevant variables for the correlation matrix
# dat_correlation <- dat %>%
#   filter(group != "HC") %>%
#   mutate(avg_f_row = avg_f, 
#          avg_k1_row = avg_k1,
#          avg_k2_w_cyst_row = avg_k2_w_cyst, 
#          avg_k2_wo_cyst_row = avg_k2_wo_cyst,
#          k2_f_row = k2_f,
#          k2_k1_row = k2_k1) %>%
#   select(
#          avg_f, 
#          avg_k1, 
#          avg_k2_w_cyst, 
#          avg_k2_wo_cyst, 
#          k2_f, 
#          k2_k1,
#          avg_f_row, 
#          avg_k1_row, 
#          avg_k2_w_cyst_row, 
#          avg_k2_wo_cyst_row, 
#          k2_f_row, 
#          k2_k1_row
#          )
# 
# # Correlation matrix in table format
# M_table <- as.data.frame(cor(y = dat_correlation[,1:6],
#                              x=dat_correlation[,7:ncol(dat_correlation)], 
#                              use = "pairwise.complete.obs")) %>%
#   select(avg_f, 
#          avg_k1, 
#          avg_k2_w_cyst, 
#          avg_k2_wo_cyst, 
#          k2_f, 
#          k2_k1)
# 
# # Compute p-values to add to matrix table
# res2 <- rcorr(as.matrix(dat_correlation))
# corr_pval <- as.data.frame(res2$P) %>%
#   select(avg_f, 
#          avg_k1, 
#          avg_k2_w_cyst, 
#          avg_k2_wo_cyst, 
#          k2_f, 
#          k2_k1) %>%
#   sapply(pvalue) 
# corr_pval <- as.data.frame(corr_pval) %>% 
#   select(avg_f, 
#          avg_k1, 
#          avg_k2_w_cyst, 
#          avg_k2_wo_cyst, 
#          k2_f, 
#          k2_k1)
# colnames(corr_pval) <- rep("p_value", ncol(corr_pval))
# 
# # Add p-values to matrix table
# corr_pval = corr_pval[7:nrow(corr_pval),]
# M_table_p <- bind_cols(M_table, corr_pval) %>%
#   relocate(map(1:ncol(M_table), ~ c(.x, .x + ncol(M_table))) %>% unlist())
# 
# # Label variables
# dict <- as.data.frame(py$var_dict)
# dict %<>%
#   mutate(avg_f = paste0("Average cortex perfusion (F)")) %>%
#   mutate(avg_k1 = paste0("Average cortex tracer uptake (k1)")) %>%
#   mutate(avg_k2_w_cyst = paste0("Average cortex perfusion with cyst (K2)")) %>%
#   mutate(avg_k2_wo_cyst = paste0("Average cortex perfusion w/o cyst(K2)")) %>%
#   mutate(k2_f = "k2/f") %>%
#   mutate(k2_k1 = "k2/k1") 
# dict <- dict[intersect(names(M_table_p), names(dict))]
# dict[setdiff(names(M_table_p), names(dict))] <- "p-value"
# Hmisc::label(M_table_p) = dict[match(names(M_table_p), names(dict))]
# dict <- as.data.frame(py$var_dict)
# dict %<>%
#   mutate(avg_f_row = paste0("Average cortex perfusion (F)")) %>%
#   mutate(avg_k1_row = paste0("Average cortex tracer uptake (k1)")) %>%
#   mutate(avg_k2_w_cyst_row = paste0("Average cortex perfusion with cyst (K2)")) %>%
#   mutate(avg_k2_wo_cyst_row = paste0("Average cortex perfusion w/o cyst(K2)")) %>%
#   mutate(k2_f_row = "k2/f") %>%
#   mutate(k2_k1_row = "k2/k1")
# row.names(M_table_p) <- dict[match(row.names(M_table_p), names(dict))]
# correlation_3 <- M_table_p 
# write.csv(correlation_3, "/Users/choiyej/GitHub/YC_CHCO/PENGUIN/JSON/correlation_3.csv", row.names = T)
# ```
# 
# ```{r}
# # Matrix table with p-values
# kable(M_table_p, 
#       col.names = rep(c("Correlation", "p-value"), ncol(M_table_p)/2), 
#       caption = "Correlation", 
#       digits = c(1,4),
#       align = rep("r", ncol(M_table_p))) %>%
#   kable_styling(bootstrap_options = c("hover"),
#             full_width = F, 
#             fixed_thead = T) %>%
#   add_header_above(header = c(" "=1, 
#                      setNames(2, Hmisc::label(M_table_p)[1]), 
#                      setNames(2, Hmisc::label(M_table_p)[3]), 
#                      setNames(2, Hmisc::label(M_table_p)[5]), 
#                      setNames(2, Hmisc::label(M_table_p)[7]), 
#                      setNames(2, Hmisc::label(M_table_p)[9]), 
#                      setNames(2, Hmisc::label(M_table_p)[11]))) %>%
#   column_spec(1, width_min = "5in", border_right=T, bold = T) %>%
#   column_spec(3, border_right=T) %>%
#   column_spec(5, border_right=T) %>%
#   column_spec(7, border_right=T) %>%
#   column_spec(9, border_right=T) %>%
#   column_spec(11, border_right=T) 
```

```{r layout="[[1,1]]"}
# # Data subset of voxelwise for heatmap
# vw_df <- dat_all %>%
#   rowwise() %>%
#   mutate(avg_k1_w_cyst_low = mean(c(rtot_k1_w_cyst_percent_low, ltot_k1_w_cyst_percent_low), na.rm = T)) %>%
#   mutate(avg_k1_w_cyst_avg = mean(c(rtot_k1_w_cyst_percent_avg, ltot_k1_w_cyst_percent_avg), na.rm = T)) %>%
#   mutate(avg_k1_w_cyst_high = mean(c(rtot_k1_w_cyst_percent_high, ltot_k1_w_cyst_percent_high), na.rm = T)) %>%
#   mutate(avg_k1_wo_cyst_low = mean(c(rtot_k1_wo_cyst_percent_low, ltot_k1_wo_cyst_percent_low), na.rm = T)) %>%
#   mutate(avg_k1_wo_cyst_avg = mean(c(rtot_k1_wo_cyst_percent_avg, ltot_k1_wo_cyst_percent_avg), na.rm = T)) %>%
#   mutate(avg_k1_wo_cyst_high = mean(c(rtot_k1_wo_cyst_percent_high, ltot_k1_wo_cyst_percent_high), na.rm = T)) %>%
#   mutate(avg_k2_w_cyst_low = mean(c(rtot_k2_w_cyst_percent_low, ltot_k2_w_cyst_percent_low), na.rm = T)) %>%
#   mutate(avg_k2_w_cyst_avg = mean(c(rtot_k2_w_cyst_percent_avg, ltot_k2_w_cyst_percent_avg), na.rm = T)) %>%
#   mutate(avg_k2_w_cyst_high = mean(c(rtot_k2_w_cyst_percent_high, ltot_k2_w_cyst_percent_high), na.rm = T)) %>%
#   mutate(avg_k2_wo_cyst_low = mean(c(rtot_k2_wo_cyst_percent_low, ltot_k2_wo_cyst_percent_low), na.rm = T)) %>%
#   mutate(avg_k2_wo_cyst_avg = mean(c(rtot_k2_wo_cyst_percent_avg, ltot_k2_wo_cyst_percent_avg), na.rm = T)) %>%
#   mutate(avg_k2_wo_cyst_high = mean(c(rtot_k2_wo_cyst_percent_high, ltot_k2_wo_cyst_percent_high), na.rm = T)) %>%
#   select(record_id, group, avg_k1_w_cyst_low,	avg_k1_w_cyst_avg,	avg_k1_w_cyst_high,
#          avg_k1_wo_cyst_low,	avg_k1_wo_cyst_avg,	avg_k1_wo_cyst_high,
#          avg_k2_w_cyst_low,	avg_k2_w_cyst_avg,	avg_k2_w_cyst_high,
#          avg_k2_wo_cyst_low,	avg_k2_wo_cyst_avg,	avg_k2_wo_cyst_high) %>%
#   mutate(avg_k1_w_cyst_ratio = avg_k1_w_cyst_low / avg_k1_w_cyst_avg) %>%
#   mutate(avg_k1_wo_cyst_ratio = avg_k1_wo_cyst_low / avg_k1_wo_cyst_avg) %>%
#   mutate(avg_k2_w_cyst_ratio = avg_k2_w_cyst_low / avg_k2_w_cyst_avg) %>%
#   mutate(avg_k2_wo_cyst_ratio = avg_k2_wo_cyst_low / avg_k2_wo_cyst_avg)
# 
# # Subset of Average Total Kidney K1 w cyst
# vw_df <- vw_df %>%
#   arrange(avg_k1_w_cyst_low)
# 
# vw_df_k1_w_cyst <- vw_df %>%
#   select(avg_k1_w_cyst_low,	avg_k1_w_cyst_avg,	avg_k1_w_cyst_high) %>%
#   filter(!is.na(avg_k1_w_cyst_low)) %>%
#   rename("Low" = "avg_k1_w_cyst_low",
#          "Average" = "avg_k1_w_cyst_avg",
#          "High" = "avg_k1_w_cyst_high")
# 
# # Heatmap of voxelwise
# png("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/superheat1.png", height = 500, width = 800)
# superheat(vw_df_k1_w_cyst, 
#           title = "Average Total Kidney K1 Activity (Including Cysts)",
#           scale = F,
#           membership.rows = vw_df$group[!is.na(vw_df$avg_k1_w_cyst_low)],
#           heat.na.col = "white",
#           heat.pal = c("#fdfbfb", "#cc0000"),
#           heat.pal.values = c(0, 1),
#           grid.hline.col = "black",
#           grid.vline.col = "black",
#           left.label.col = c("white","white"),
#           bottom.label.col = c("white","white", "white"),
#           left.label.text.size = 4,
#           bottom.label.text.size = 4,
#           grid.hline = T,
#           grid.vline = T,
#           )
# dev.off()
# 
# # Subset of Average Total Kidney K1 wo cyst
# vw_df <- vw_df %>%
#   arrange(avg_k1_wo_cyst_low)
# 
# vw_df_k1_wo_cyst <- vw_df %>%
#   select(avg_k1_wo_cyst_low,	avg_k1_wo_cyst_avg,	avg_k1_wo_cyst_high) %>%
#   filter(!is.na(avg_k1_wo_cyst_low)) %>%
#   rename("Low" = "avg_k1_wo_cyst_low",
#            "Average" = "avg_k1_wo_cyst_avg",
#          "High" = "avg_k1_wo_cyst_high")
# 
# # Heatmap of voxelwise
# png("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/superheat2.png", height = 500, width = 800)
# superheat(vw_df_k1_wo_cyst, 
#           title = "Average Total Kidney K1 Activity (Excluding Cysts)",
#           scale = F,
#           membership.rows = vw_df$group[!is.na(vw_df$avg_k1_wo_cyst_low)],
#           heat.na.col = "white",
#           heat.pal = c("#fdfbfb", "#cc0000"),
#           heat.pal.values = c(0, 1),
#           grid.hline.col = "black",
#           grid.vline.col = "black",
#           left.label.col = c("white","white"),
#           bottom.label.col = c("white","white", "white"),
#           left.label.text.size = 4,
#           bottom.label.text.size = 4,
#           grid.hline = T,
#           grid.vline = T
#           )
# dev.off()
# ```
# 
# #### K2 activity
# 
# ```{r layout="[[1,1]]"}
# # Subset of Average Total Kidney K2 w cyst
# vw_df <- vw_df %>%
#   arrange(avg_k2_w_cyst_low)
# 
# vw_df_k2_w_cyst <- vw_df %>%
#   select(avg_k2_w_cyst_low,	avg_k2_w_cyst_avg,	avg_k2_w_cyst_high) %>%
#   filter(!is.na(avg_k2_w_cyst_low)) %>%
#   rename("Low" = "avg_k2_w_cyst_low",
#            "Average" = "avg_k2_w_cyst_avg",
#          "High" = "avg_k2_w_cyst_high")
# 
# # Heatmap of voxelwise
# png("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/superheat3.png", height = 500, width = 800)
# superheat(vw_df_k2_w_cyst, 
#           title = "Average Total Kidney K2 Activity (Including Cysts)",
#           scale = F,
#           membership.rows = vw_df$group[!is.na(vw_df$avg_k2_w_cyst_low)],
#           heat.na.col = "white",
#           heat.pal = c("#fdfbfb", "#cc0000"),
#           heat.pal.values = c(0, 1),
#           grid.hline.col = "black",
#           grid.vline.col = "black",
#           left.label.col = c("white","white"),
#           bottom.label.col = c("white","white", "white"),
#           left.label.text.size = 4,
#           bottom.label.text.size = 4,
#           grid.hline = T,
#           grid.vline = T
#           )
# dev.off()
# 
# # Subset of Average Total Kidney K2 wo cyst
# vw_df <- vw_df %>%
#   arrange(avg_k2_wo_cyst_low)
# 
# vw_df_k2_wo_cyst <- vw_df %>%
#   select(avg_k2_wo_cyst_low,	avg_k2_wo_cyst_avg,	avg_k2_wo_cyst_high) %>%
#   filter(!is.na(avg_k2_wo_cyst_low)) %>%
#   rename("Low" = "avg_k2_wo_cyst_low",
#            "Average" = "avg_k2_wo_cyst_avg",
#          "High" = "avg_k2_wo_cyst_high")
# 
# # Heatmap of voxelwise
# png("/Users/choiyej/GitHub/YC_CHCO/PENGUIN/superheat4.png", height = 500, width = 800)
# superheat(vw_df_k2_wo_cyst, 
#           title = "Average Total Kidney K2 Activity (Excluding Cysts)",
#           scale = F,
#           membership.rows = vw_df$group[!is.na(vw_df$avg_k2_wo_cyst_low)],
#           heat.na.col = "white",
#           heat.pal = c("#fdfbfb", "#cc0000"),
#           heat.pal.values = c(0, 1),
#           grid.hline.col = "black",
#           grid.vline.col = "black",
#           left.label.col = c("white","white"),
#           bottom.label.col = c("white","white", "white"),
#           left.label.text.size = 4,
#           bottom.label.text.size = 4,
#           grid.hline = T,
#           grid.vline = T
#           )
# dev.off()
# ```
# 
# ```{r}
# ############ RATIO ############
# write.csv(vw_df, "./penguin_voxelwise_clean.csv", row.names=F)
# # Subset of Average Total Kidney K1 w cyst
# vw_df <- vw_df %>%
#   arrange(avg_k1_w_cyst_ratio)
# 
# vw_df_k1_w_cyst_ratio <- vw_df %>%
#   select(avg_k1_w_cyst_ratio,	avg_k1_w_cyst_avg,	avg_k1_w_cyst_high) %>%
#   filter(!is.na(avg_k1_w_cyst_ratio)) %>%
#   rename("Low_Ratio" = "avg_k1_w_cyst_ratio",
#            "Average" = "avg_k1_w_cyst_avg",
#          "High" = "avg_k1_w_cyst_high")
```
